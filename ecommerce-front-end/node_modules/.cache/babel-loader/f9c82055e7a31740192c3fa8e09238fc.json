{"ast":null,"code":"export default (query => {\n  // this is the only react here\n  if (query) {\n    // if there is a string \n    const queryString = query.split(\"?\")[1]; // get the stuff after the ?\n\n    if (queryString.length > 0) {\n      // if there was stuff after the ? \n      const params = queryString.split(\"&\"); // split on & (gives an array)\n\n      const paramObj = {}; // create an object\n\n      params.forEach(param => {\n        // for each part of the split array \n        const keyValue = param.split(\"=\"); // split on the = \n\n        paramObj[keyValue[0]] = keyValue[1]; // use the string before the = as key and after as value \n      });\n      return paramObj; // return the object\n    }\n  }\n\n  return {}; // otherwise return empty object\n}); // export default (query) => {\n//     let urlParams = new URLSearchParams(query);\n//     const result = {};\n//     for (const [key, value] of urlParams.entries()) { \n//       result[key] = value;\n//     }\n//     return result;\n//   }","map":{"version":3,"sources":["C:/Users/Praveen Kariyawasam/Documents/Projects/E-Commerce - Project/mern-ecommerce/ecommerce-front-end/src/utils/getParams.js"],"names":["query","queryString","split","length","params","paramObj","forEach","param","keyValue"],"mappings":"AAAA,gBAAgBA,KAAD,IAAW;AAAE;AACxB,MAAGA,KAAH,EAAS;AAAE;AACP,UAAMC,WAAW,GAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAApB,CADK,CACoC;;AACzC,QAAGD,WAAW,CAACE,MAAZ,GAAqB,CAAxB,EAA0B;AAAE;AACxB,YAAMC,MAAM,GAAGH,WAAW,CAACC,KAAZ,CAAkB,GAAlB,CAAf,CADsB,CACiB;;AACvC,YAAMG,QAAQ,GAAG,EAAjB,CAFsB,CAED;;AACrBD,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAI;AAAE;AACtB,cAAMC,QAAQ,GAAGD,KAAK,CAACL,KAAN,CAAY,GAAZ,CAAjB,CADoB,CACe;;AACnCG,QAAAA,QAAQ,CAACG,QAAQ,CAAC,CAAD,CAAT,CAAR,GAAwBA,QAAQ,CAAC,CAAD,CAAhC,CAFoB,CAEiB;AACxC,OAHD;AAIA,aAAOH,QAAP,CAPsB,CAOL;AACpB;AACJ;;AAED,SAAO,EAAP,CAdsB,CAcX;AACd,CAfD,E,CAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["export default (query) => { // this is the only react here\r\n    if(query){ // if there is a string \r\n        const queryString = query.split(\"?\")[1]; // get the stuff after the ?\r\n        if(queryString.length > 0){ // if there was stuff after the ? \r\n            const params = queryString.split(\"&\"); // split on & (gives an array)\r\n            const paramObj = {}; // create an object\r\n            params.forEach(param => { // for each part of the split array \r\n                const keyValue = param.split(\"=\"); // split on the = \r\n                paramObj[keyValue[0]] = keyValue[1]; // use the string before the = as key and after as value \r\n            });\r\n            return paramObj; // return the object\r\n        }\r\n    }\r\n\r\n    return {}; // otherwise return empty object\r\n}\r\n\r\n\r\n// export default (query) => {\r\n//     let urlParams = new URLSearchParams(query);\r\n//     const result = {};\r\n//     for (const [key, value] of urlParams.entries()) { \r\n//       result[key] = value;\r\n//     }\r\n//     return result;\r\n//   }"]},"metadata":{},"sourceType":"module"}