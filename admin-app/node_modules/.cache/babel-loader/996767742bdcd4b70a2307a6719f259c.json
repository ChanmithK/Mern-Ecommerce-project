{"ast":null,"code":"import { userConstants } from \"./constants\";\nimport axios from \"../helpers/axios\";\nexport const signup = user => {\n  return async dispatch => {\n    dispatch({\n      type: authConstants.LOGIN_REQUEST\n    });\n    const res = await axios.post(\"/admin/signup\", { ...user\n    });\n\n    if (res.status === 201) {\n      const {\n        message\n      } = res.data;\n      dispatch({\n        type: userConstants.USER_REGISTER_REQUEST,\n        payload: {\n          token,\n          user\n        }\n      });\n    } else {\n      if (res.status === 400) {\n        dispatch({\n          type: authConstants.LOGIN_FAILURE,\n          payload: {\n            error: res.data.error\n          }\n        });\n      }\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/Praveen Kariyawasam/Documents/PROJECTS/E-Commerce - Project/mern-ecommerce/admin-app/src/actions/user.actions.js"],"names":["userConstants","axios","signup","user","dispatch","type","authConstants","LOGIN_REQUEST","res","post","status","message","data","USER_REGISTER_REQUEST","payload","token","LOGIN_FAILURE","error"],"mappings":"AAAA,SAASA,aAAT,QAA8B,aAA9B;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,OAAO,MAAMC,MAAM,GAAIC,IAAD,IAAU;AAC5B,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEC,aAAa,CAACC;AAAtB,KAAD,CAAR;AACA,UAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,IAAN,CAAW,eAAX,EAA4B,EAC5C,GAAGN;AADyC,KAA5B,CAAlB;;AAIA,QAAIK,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtB,YAAM;AAAEC,QAAAA;AAAF,UAAcH,GAAG,CAACI,IAAxB;AACAR,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEL,aAAa,CAACa,qBADb;AAEPC,QAAAA,OAAO,EAAE;AACPC,UAAAA,KADO;AAEPZ,UAAAA;AAFO;AAFF,OAAD,CAAR;AAOD,KATD,MASO;AACL,UAAIK,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtBN,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAEC,aAAa,CAACU,aADb;AAEPF,UAAAA,OAAO,EAAE;AAAEG,YAAAA,KAAK,EAAET,GAAG,CAACI,IAAJ,CAASK;AAAlB;AAFF,SAAD,CAAR;AAID;AACF;AACF,GAvBD;AAwBD,CAzBI","sourcesContent":["import { userConstants } from \"./constants\";\r\nimport axios from \"../helpers/axios\";\r\n\r\nexport const signup = (user) => {\r\n    return async (dispatch) => {\r\n      dispatch({ type: authConstants.LOGIN_REQUEST });\r\n      const res = await axios.post(\"/admin/signup\", {\r\n        ...user,\r\n      });\r\n  \r\n      if (res.status === 201) {\r\n        const { message } = res.data;\r\n        dispatch({\r\n          type: userConstants.USER_REGISTER_REQUEST,\r\n          payload: {\r\n            token,\r\n            user,\r\n          },\r\n        });\r\n      } else {\r\n        if (res.status === 400) {\r\n          dispatch({\r\n            type: authConstants.LOGIN_FAILURE,\r\n            payload: { error: res.data.error },\r\n          });\r\n        }\r\n      }\r\n    };\r\n  };"]},"metadata":{},"sourceType":"module"}