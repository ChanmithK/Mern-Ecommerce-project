{"ast":null,"code":"import { categoryConstants } from \"../actions/constants\";\nconst initState = {\n  categories: [],\n  loading: false,\n  error: null\n}; //This function refresh the page with newly added category.\n// This function call in 34 th line in this file\n\nconst buildNewCategories = (parentId, categories, category) => {\n  let myCategories = [];\n\n  for (let cat of categories) {\n    if (cat._id == parentId) {\n      myCategories.push({ ...cat,\n        children: cat.children && cat.children.length > 0 ? buildNewCategories(parentId, [...cat.children, {\n          _id: category._id,\n          name: category.name,\n          slug: category.slug,\n          parentId: category.parentId,\n          children: category.children\n        }], category) : []\n      });\n    } else {\n      myCategories.push({ ...cat,\n        children: cat.children && cat.children.length > 0 ? buildNewCategories(parentId, cat.children, category) : []\n      });\n    }\n  }\n\n  return myCategories;\n};\n\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case categoryConstants.GET_ALL_CATEGORY_SUCCESS:\n      state = { ...state,\n        categories: action.payload.categories\n      };\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\n      state = { ...state,\n        loading: true\n      };\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\n      const cate_ = action.payload.categ;\n      const updatedCategories = buildNewCategories(cate_.parentId, state.categories, cate_);\n      state = { ...state,\n        categories: updatedCategories,\n        loading: false\n      };\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\n      state = { ...initState\n      };\n      break;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["C:/Users/Praveen Kariyawasam/Documents/Projects/E-Commerce - Project/mern-ecommerce/admin-app/src/reducers/category.reducer.js"],"names":["categoryConstants","initState","categories","loading","error","buildNewCategories","parentId","category","myCategories","cat","_id","push","children","length","name","slug","state","action","type","GET_ALL_CATEGORY_SUCCESS","payload","ADD_NEW_CATEGORY_REQUEST","ADD_NEW_CATEGORY_SUCCESS","cate_","categ","updatedCategories","ADD_NEW_CATEGORY_FAILURE"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,sBAAlC;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,UAAU,EAAE,EADI;AAEhBC,EAAAA,OAAO,EAAE,KAFO;AAGhBC,EAAAA,KAAK,EAAE;AAHS,CAAlB,C,CAMA;AACA;;AACA,MAAMC,kBAAkB,GAAE,CAACC,QAAD,EAAUJ,UAAV,EAAsBK,QAAtB,KAAmC;AAE3D,MAAIC,YAAY,GAAG,EAAnB;;AAEA,OAAI,IAAIC,GAAR,IAAeP,UAAf,EAA0B;AAExB,QAAGO,GAAG,CAACC,GAAJ,IAAWJ,QAAd,EAAuB;AACrBE,MAAAA,YAAY,CAACG,IAAb,CAAkB,EAChB,GAAGF,GADa;AAEhBG,QAAAA,QAAQ,EAAEH,GAAG,CAACG,QAAJ,IAAgBH,GAAG,CAACG,QAAJ,CAAaC,MAAb,GAAuB,CAAvC,GAA2CR,kBAAkB,CAACC,QAAD,EAAU,CAAC,GAAGG,GAAG,CAACG,QAAR,EAAkB;AACjGF,UAAAA,GAAG,EAAEH,QAAQ,CAACG,GADmF;AAEjGI,UAAAA,IAAI,EAAEP,QAAQ,CAACO,IAFkF;AAGjGC,UAAAA,IAAI,EAAER,QAAQ,CAACQ,IAHkF;AAIjGT,UAAAA,QAAQ,EAAEC,QAAQ,CAACD,QAJ8E;AAKjGM,UAAAA,QAAQ,EAAEL,QAAQ,CAACK;AAL8E,SAAlB,CAAV,EAMpEL,QANoE,CAA7D,GAMK;AARC,OAAlB;AAWD,KAZD,MAYK;AACHC,MAAAA,YAAY,CAACG,IAAb,CAAkB,EAChB,GAAGF,GADa;AAEhBG,QAAAA,QAAQ,EAAEH,GAAG,CAACG,QAAJ,IAAgBH,GAAG,CAACG,QAAJ,CAAaC,MAAb,GAAuB,CAAvC,GAA2CR,kBAAkB,CAACC,QAAD,EAAUG,GAAG,CAACG,QAAd,EAAuBL,QAAvB,CAA7D,GAAgG;AAF1F,OAAlB;AAID;AACF;;AACD,SAAOC,YAAP;AACD,CA1BD;;AA4BA,gBAAe,YAA+B;AAAA,MAA9BQ,KAA8B,uEAAtBf,SAAsB;AAAA,MAAXgB,MAAW;;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKlB,iBAAiB,CAACmB,wBAAvB;AACEH,MAAAA,KAAK,GAAG,EACN,GAAGA,KADG;AAENd,QAAAA,UAAU,EAAEe,MAAM,CAACG,OAAP,CAAelB;AAFrB,OAAR;AAIA;;AAEF,SAAKF,iBAAiB,CAACqB,wBAAvB;AACEL,MAAAA,KAAK,GAAG,EACN,GAAGA,KADG;AAENb,QAAAA,OAAO,EAAC;AAFF,OAAR;AAIA;;AAEF,SAAKH,iBAAiB,CAACsB,wBAAvB;AAEE,YAAMC,KAAK,GAAEN,MAAM,CAACG,OAAP,CAAeI,KAA5B;AACA,YAAMC,iBAAiB,GAAGpB,kBAAkB,CAACkB,KAAK,CAACjB,QAAP,EAAgBU,KAAK,CAACd,UAAtB,EAAiCqB,KAAjC,CAA5C;AAEAP,MAAAA,KAAK,GAAG,EACN,GAAGA,KADG;AAENd,QAAAA,UAAU,EAAEuB,iBAFN;AAGNtB,QAAAA,OAAO,EAAC;AAHF,OAAR;AAKA;;AAEF,SAAKH,iBAAiB,CAAC0B,wBAAvB;AACEV,MAAAA,KAAK,GAAG,EACN,GAAGf;AADG,OAAR;AAGA;AA/BJ;;AAkCA,SAAOe,KAAP;AACD,CApCD","sourcesContent":["import { categoryConstants } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n  categories: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\n//This function refresh the page with newly added category.\r\n// This function call in 34 th line in this file\r\nconst buildNewCategories =(parentId,categories, category) => {\r\n\r\n  let myCategories = [];\r\n\r\n  for(let cat of categories){\r\n\r\n    if(cat._id == parentId){\r\n      myCategories.push({\r\n        ...cat,\r\n        children: cat.children && cat.children.length  > 0 ? buildNewCategories(parentId,[...cat.children, {\r\n          _id: category._id,\r\n          name: category.name,\r\n          slug: category.slug,\r\n          parentId: category.parentId,\r\n          children: category.children\r\n        }],category) : []\r\n      });\r\n\r\n    }else{\r\n      myCategories.push({\r\n        ...cat,\r\n        children: cat.children && cat.children.length  > 0 ? buildNewCategories(parentId,cat.children,category) : []\r\n      });\r\n    }\r\n  }\r\n  return myCategories;\r\n}\r\n\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case categoryConstants.GET_ALL_CATEGORY_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        categories: action.payload.categories,\r\n      };\r\n      break;\r\n\r\n    case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading:true\r\n      };\r\n      break;\r\n\r\n    case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\r\n\r\n      const cate_ =action.payload.categ;\r\n      const updatedCategories = buildNewCategories(cate_.parentId,state.categories,cate_);\r\n\r\n      state = {\r\n        ...state,\r\n        categories: updatedCategories ,\r\n        loading:false\r\n      };\r\n      break;\r\n\r\n    case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\r\n      state = {\r\n        ...initState,\r\n      };\r\n      break;\r\n  }\r\n\r\n  return state;\r\n};\r\n "]},"metadata":{},"sourceType":"module"}