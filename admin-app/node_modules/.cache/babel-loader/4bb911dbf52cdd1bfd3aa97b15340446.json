{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Praveen Kariyawasam\\\\Documents\\\\Projects\\\\E-Commerce - Project\\\\mern-ecommerce\\\\admin-app\\\\src\\\\containers\\\\Category\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Col, Container, Row, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addCategory, getAllCategory, updateCategories } from \"../../actions\";\nimport Layout from \"../../components/Layout\";\nimport Input from \"../../components/UI/Input\";\nimport Modal from '../../components/UI/Modal';\nimport CheckboxTree from \"react-checkbox-tree\";\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\nimport { IoIosCheckboxOutline, IoIosCheckbox, IoIosArrowForward, IoIosArrowDown } from \"react-icons/io\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Category() {\n  _s();\n\n  const category = useSelector(state => state.category);\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n  const [categoryName, setCategoryName] = useState('');\n  const [parentCategoryId, setParentCategoryId] = useState('');\n  const [categoryImage, setCategoryImage] = useState('');\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const [checkedArray, setCheckedArray] = useState([]);\n  const [expandedArray, setExpandedArray] = useState([]);\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\n  const [deleteCategoryModal, setDeleteCategoryModal] = useState(false); ////////////////////Now this code part in the App.js 24 line//////////\n  // useEffect(() => {\n  //   dispatch(getAllCategory()); \n  // }, []);\n\n  const handleClose = () => {\n    const form = new FormData();\n    form.append('name', categoryName);\n    form.append('parentId', parentCategoryId);\n    form.append('categoryImage', categoryImage);\n    dispatch(addCategory(form));\n    setCategoryName('');\n    setParentCategoryId('');\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const renderCategories = categories => {\n    let myCategories = [];\n\n    for (let category__ of categories) {\n      myCategories.push({\n        label: category__.name,\n        value: category__._id,\n        children: category__.children.length > 0 && renderCategories(category__.children)\n      });\n    }\n\n    return myCategories;\n  }; //This fuction for <select> <option></option> </select> part\n\n\n  const createCategoryList = function (categories) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name,\n        parentId: category.parentId\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n\n    return options;\n  };\n\n  const handleCategoryImage = e => {\n    setCategoryImage(e.target.files[0]);\n  };\n\n  const updateCategory = () => {\n    setUpdateCategoryModal(true);\n  };\n\n  const handleCategoryInput = (key, value, index, type) => {\n    if (type == \"checked\") {\n      const updatedCheckedArray = checkedArray.map((item, _index) => index == _index ? { ...item,\n        [key]: value\n      } : item);\n      setCheckedArray(updatedCheckedArray);\n    } else if (type == \"expanded\") {\n      const updatedExpandedArray = expandedArray.map((item, _index) => index == _index ? { ...item,\n        [key]: value\n      } : item);\n      setExpandedArray(updatedExpandedArray);\n    }\n  };\n\n  {\n    /* Add Categories */\n  }\n\n  const renderAddCategoryModal = () => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      handleClose: handleClose,\n      modalTitle: 'Add New Category',\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        value: categoryName,\n        placeholder: `Category Name`,\n        onChange: e => setCategoryName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        value: parentCategoryId,\n        onChange: e => setParentCategoryId(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"select category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.name\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"categoryImage\",\n        onChange: handleCategoryImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  };\n\n  const updateCategoriesForm = () => {\n    const form = new FormData();\n    expandedArray.forEach((item, index) => (form.append('_id', item.value), form.append('name', item.name), form.append('parentId', item.parentId ? item.parentId : \"\"), form.append('type', item.type)));\n    checkedArray.forEach((item, index) => (form.append('_id', item.value), form.append('name', item.name), form.append('parentId', item.parentId ? item.parentId : \"\"), form.append('type', item.type)));\n    dispatch(updateCategories(form)).then(result => {\n      if (result) {\n        dispatch(getAllCategory());\n      }\n    });\n    setUpdateCategoryModal(false);\n  };\n\n  {\n    /* Edit Categories */\n  }\n\n  const renderUpdateCategoriesModal = () => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: updateCategoryModal,\n      handleClose: updateCategoriesForm,\n      modalTitle: 'Update Categories',\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Expanded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 10\n      }, this), expandedArray.length > 0 && expandedArray.map((item, index) => /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: item.name,\n            placeholder: `Category Name`,\n            onChange: e => handleCategoryInput('name', e.target.value, index, 'expanded')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            className: \"form-control\",\n            value: item.parentId,\n            onChange: e => handleCategoryInput('parentId', e.target.value, index, 'expanded'),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"select category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 18\n            }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.name\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 26\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"store\",\n              children: \"Store\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"product\",\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"page\",\n              children: \"Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 14\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 12\n      }, this)), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Check Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 10\n      }, this), checkedArray.length > 0 && checkedArray.map((item, index) => /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: item.name,\n            placeholder: `Category Name`,\n            onChange: e => handleCategoryInput('name', e.target.value, index, 'checked')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            className: \"form-control\",\n            value: item.parentId,\n            onChange: e => handleCategoryInput('parentId', e.target.value, index, 'checked'),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"select category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 18\n            }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.name\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 26\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"store\",\n              children: \"Store\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"product\",\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"page\",\n              children: \"Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 14\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 12\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 8\n    }, this);\n  };\n\n  const deleteCategory = () => {\n    setDeleteCategoryModal(true);\n  };\n\n  const renderDeleteCategoryModal = () => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      modalTitle: \"Confirm\",\n      show: deleteCategoryModal,\n      handleClose: () => setDeleteCategoryModal(false),\n      buttons: [{\n        label: 'No',\n        color: 'primary',\n        onClick: () => {\n          alert('no');\n        }\n      }, {\n        label: 'Yes',\n        color: 'danger',\n        onClick: () => {\n          alert('yes');\n        }\n      }],\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Expanded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Checked\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    sidebar: true,\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleShow,\n              type: \"button\",\n              class: \"btn btn-primary\",\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(CheckboxTree, {\n            nodes: renderCategories(category.categories),\n            checked: checked,\n            expanded: expanded,\n            onCheck: checked => setChecked(checked),\n            onExpand: expanded => setExpanded(expanded),\n            icons: {\n              check: /*#__PURE__*/_jsxDEV(IoIosCheckbox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 26\n              }, this),\n              uncheck: /*#__PURE__*/_jsxDEV(IoIosCheckboxOutline, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 28\n              }, this),\n              halfCheck: /*#__PURE__*/_jsxDEV(IoIosCheckbox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 30\n              }, this),\n              expandClose: /*#__PURE__*/_jsxDEV(IoIosArrowForward, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 32\n              }, this),\n              expandOpen: /*#__PURE__*/_jsxDEV(IoIosArrowDown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 31\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: deleteCategory,\n            type: \"button\",\n            class: \"btn btn-primary\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: updateCategory,\n            type: \"button\",\n            class: \"btn btn-primary\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), renderAddCategoryModal(), renderUpdateCategoriesModal(), renderDeleteCategoryModal()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Category, \"m6Txul9kAbcvVs1VtDW+gJQYDoc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["C:/Users/Praveen Kariyawasam/Documents/Projects/E-Commerce - Project/mern-ecommerce/admin-app/src/containers/Category/index.js"],"names":["React","useEffect","useState","Col","Container","Row","Button","useDispatch","useSelector","addCategory","getAllCategory","updateCategories","Layout","Input","Modal","CheckboxTree","IoIosCheckboxOutline","IoIosCheckbox","IoIosArrowForward","IoIosArrowDown","Category","category","state","dispatch","show","setShow","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","categoryImage","setCategoryImage","checked","setChecked","expanded","setExpanded","checkedArray","setCheckedArray","expandedArray","setExpandedArray","updateCategoryModal","setUpdateCategoryModal","deleteCategoryModal","setDeleteCategoryModal","handleClose","form","FormData","append","handleShow","renderCategories","categories","myCategories","category__","push","label","name","value","_id","children","length","createCategoryList","options","parentId","handleCategoryImage","e","target","files","updateCategory","handleCategoryInput","key","index","type","updatedCheckedArray","map","item","_index","updatedExpandedArray","renderAddCategoryModal","option","updateCategoriesForm","forEach","then","result","renderUpdateCategoriesModal","deleteCategory","renderDeleteCategoryModal","color","onClick","alert","display","justifyContent","check","uncheck","halfCheck","expandClose","expandOpen"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addCategory, getAllCategory, updateCategories } from \"../../actions\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport Modal from '../../components/UI/Modal';\r\nimport CheckboxTree from \"react-checkbox-tree\";\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\nimport { IoIosCheckboxOutline, IoIosCheckbox, IoIosArrowForward, IoIosArrowDown } from \"react-icons/io\";\r\n\r\n\r\n\r\nexport default function Category() {\r\n  const category = useSelector((state) => state.category);\r\n  const dispatch = useDispatch();\r\n  const [show, setShow] = useState(false);\r\n  const [categoryName,setCategoryName] =useState('');\r\n  const [parentCategoryId,setParentCategoryId] =useState('');\r\n  const [categoryImage,setCategoryImage] =useState('');\r\n  const [checked, setChecked] = useState([]);\r\n  const [expanded, setExpanded] = useState([]);\r\n  const [checkedArray, setCheckedArray] = useState([]);\r\n  const [expandedArray, setExpandedArray] = useState([]);\r\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\r\n  const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\r\n\r\n\r\n  ////////////////////Now this code part in the App.js 24 line//////////\r\n  // useEffect(() => {\r\n  //   dispatch(getAllCategory()); \r\n  // }, []);\r\n\r\n  const handleClose = () => {\r\n    const form = new FormData();\r\n\r\n    form.append('name',categoryName);\r\n    form.append('parentId',parentCategoryId);\r\n    form.append('categoryImage',categoryImage);\r\n    dispatch(addCategory(form)); \r\n    setCategoryName('');\r\n    setParentCategoryId('');\r\n  \r\n    setShow(false);\r\n    \r\n  } \r\n  \r\n  const handleShow = () => setShow(true);\r\n\r\n  const renderCategories = (categories) => {\r\n    let myCategories = [];\r\n    for (let category__ of categories) {\r\n      myCategories.push(\r\n        {\r\n          label: category__.name,\r\n          value:category__._id,\r\n          children:category__.children.length > 0 && renderCategories(category__.children)\r\n        }\r\n      );\r\n    }\r\n    return myCategories;\r\n  };\r\n\r\n  //This fuction for <select> <option></option> </select> part\r\n  const createCategoryList = (categories, options =[]) => {\r\n      for(let category of categories){\r\n          options.push({ \r\n            value: category._id, \r\n            name: category.name , \r\n            parentId: category.parentId \r\n          });\r\n          if(category.children.length > 0){\r\n              createCategoryList(category.children, options)\r\n          }\r\n      }\r\n      return options;\r\n  }\r\n\r\n  const handleCategoryImage = (e) =>{\r\n      setCategoryImage(e.target.files[0]);\r\n  }\r\n\r\n  const updateCategory = () => {\r\n    setUpdateCategoryModal(true);\r\n    \r\n  }\r\n\r\n  const handleCategoryInput = (key, value, index, type) => {\r\n    if(type ==  \"checked\"){\r\n      const updatedCheckedArray = checkedArray.map((item, _index) => index == _index ? { ...item, [key]: value} : item);\r\n      setCheckedArray(updatedCheckedArray);\r\n    }else if(type == \"expanded\" ){\r\n      const updatedExpandedArray = expandedArray.map((item, _index) => index == _index ? { ...item, [key]: value} : item);\r\n      setExpandedArray(updatedExpandedArray);\r\n    }\r\n  }\r\n  \r\n  {/* Add Categories */}\r\n  const renderAddCategoryModal = () => {\r\n    return(\r\n      <Modal\r\n      show={show}\r\n      handleClose ={handleClose}\r\n      modalTitle = {'Add New Category'}\r\n      >  \r\n        <Input \r\n                value={categoryName}\r\n                placeholder = {`Category Name`}\r\n                onChange={(e)=>setCategoryName(e.target.value)}\r\n            />\r\n            <br></br>\r\n            <select \r\n            className=\"form-control\" \r\n            value ={parentCategoryId}\r\n            onChange={(e)=> setParentCategoryId(e.target.value)}>\r\n                <option>select category</option>\r\n                {\r\n                    createCategoryList(category.categories).map(option =>\r\n                        <option key={option.value} value={option.value}>{option.name}</option>)\r\n                }\r\n            </select>\r\n            <br></br>\r\n            <input\r\n                type=\"file\"\r\n                name=\"categoryImage\"\r\n                onChange ={handleCategoryImage}\r\n            />\r\n\r\n      </Modal> \r\n    )\r\n  }\r\n\r\n  const updateCategoriesForm = () => {\r\n\r\n    const form = new FormData();\r\n\r\n    expandedArray.forEach((item,index) => (\r\n      form.append('_id', item.value),\r\n      form.append('name', item.name),\r\n      form.append('parentId', item.parentId ? item.parentId: \"\"),\r\n      form.append('type', item.type)\r\n    ))\r\n\r\n    checkedArray.forEach((item,index) => (\r\n      form.append('_id', item.value),\r\n      form.append('name', item.name),\r\n      form.append('parentId', item.parentId ? item.parentId: \"\"),\r\n      form.append('type', item.type)\r\n    ))\r\n\r\n    dispatch(updateCategories(form))\r\n    .then(result => {\r\n      if(result){\r\n        dispatch(getAllCategory())\r\n      }\r\n    })\r\n    setUpdateCategoryModal(false);\r\n  }\r\n\r\n  {/* Edit Categories */}\r\n  const renderUpdateCategoriesModal = () => {\r\n    return (\r\n       <Modal\r\n       show={updateCategoryModal}\r\n       handleClose ={updateCategoriesForm}\r\n       modalTitle = {'Update Categories'}\r\n       size = \"lg\"\r\n       >  \r\n         <Row>\r\n           <Col>\r\n                 <h6>Expanded</h6>\r\n           </Col>\r\n         </Row>\r\n         {\r\n           expandedArray.length > 0 &&\r\n           expandedArray.map((item, index) => \r\n           \r\n           <Row key={index}>\r\n             <Col>\r\n             <Input \r\n                 value={item.name}\r\n                 placeholder = {`Category Name`}\r\n                 onChange={(e)=> handleCategoryInput('name',e.target.value,index,'expanded') }\r\n             />\r\n             </Col> \r\n             <Col>\r\n             <select \r\n             className=\"form-control\" className=\"form-control\" \r\n             value ={item.parentId}\r\n             onChange={(e)=> handleCategoryInput('parentId',e.target.value,index,'expanded')}>\r\n                 <option>select category</option>\r\n                 {\r\n                     createCategoryList(category.categories).map(option =>\r\n                         <option key={option.value} value={option.value}>{option.name}</option>)\r\n                 }\r\n             </select>\r\n             </Col>  \r\n             <Col>\r\n                 <select className=\"form-control\" >\r\n                   <option value=\"\">Select Type</option>\r\n                   <option value=\"store\">Store</option>\r\n                   <option value=\"product\">Product</option>\r\n                   <option value=\"page\">Page</option>\r\n                 </select>\r\n             </Col> \r\n         </Row>\r\n           )\r\n         }\r\n         <h6>Check Categories</h6>\r\n         {\r\n           checkedArray.length > 0 &&\r\n           checkedArray.map((item, index) => \r\n           \r\n           <Row key={index}>\r\n             <Col>\r\n             <Input \r\n                 value={item.name}\r\n                 placeholder = {`Category Name`}\r\n                 onChange={(e)=> handleCategoryInput('name',e.target.value,index,'checked') }\r\n             />\r\n             </Col> \r\n             <Col>\r\n             <select \r\n             className=\"form-control\" className=\"form-control\" \r\n             value ={item.parentId}\r\n             onChange={(e)=> handleCategoryInput('parentId',e.target.value,index,'checked')}>\r\n                 <option>select category</option>\r\n                 {\r\n                     createCategoryList(category.categories).map(option =>\r\n                         <option key={option.value} value={option.value}>{option.name}</option>)\r\n                 }\r\n             </select>\r\n             </Col>  \r\n             <Col>\r\n                 <select className=\"form-control\" >\r\n                   <option value=\"\">Select Type</option>\r\n                   <option value=\"store\">Store</option>\r\n                   <option value=\"product\">Product</option>\r\n                   <option value=\"page\">Page</option>\r\n                 </select>\r\n             </Col> \r\n         </Row>\r\n           )\r\n         }\r\n             <br></br>\r\n             {/* <input\r\n                 type=\"file\"\r\n                 name=\"categoryImage\"\r\n                 onChange ={handleCategoryImage}\r\n             /> */}\r\n \r\n       </Modal>\r\n    );\r\n  };\r\n\r\n  const deleteCategory = () =>{\r\n    setDeleteCategoryModal(true);\r\n  }\r\n\r\n  const renderDeleteCategoryModal = () => {\r\n    return(\r\n      <Modal\r\n        modalTitle=\"Confirm\"\r\n        show = {deleteCategoryModal}\r\n        handleClose = {()=> setDeleteCategoryModal(false)}\r\n        buttons = {[\r\n          {\r\n            label: 'No',\r\n            color: 'primary',\r\n            onClick: () => {\r\n              alert('no');\r\n            }\r\n          },\r\n          {\r\n            label: 'Yes',\r\n            color: 'danger',\r\n            onClick: () => {\r\n              alert('yes');\r\n            }\r\n          }\r\n        ]}\r\n        >\r\n  \r\n        <h5>Expanded</h5>\r\n        <h5>Checked</h5>\r\n          \r\n      </Modal>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <h3>Category</h3>\r\n              <button onClick={handleShow} type=\"button\" class=\"btn btn-primary\">Add</button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={12}>\r\n            {/* <ul>\r\n                {renderCategories(category.categories)}\r\n            </ul> */}\r\n             <CheckboxTree\r\n                nodes={renderCategories(category.categories)}\r\n                checked={checked}\r\n                expanded={expanded}\r\n                onCheck={checked => setChecked( checked )}\r\n                onExpand={expanded => setExpanded(expanded)}\r\n                icons ={{\r\n                  check: <IoIosCheckbox/>,\r\n                  uncheck: <IoIosCheckboxOutline/>,\r\n                  halfCheck: <IoIosCheckbox/>,\r\n                  expandClose: <IoIosArrowForward/>,\r\n                  expandOpen: <IoIosArrowDown/>,\r\n                }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n          <button onClick={deleteCategory}  type=\"button\" class=\"btn btn-primary\">Delete</button>\r\n          <button onClick={updateCategory} type=\"button\" class=\"btn btn-primary\">Edit</button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n          {renderAddCategoryModal()}\r\n          {renderUpdateCategoriesModal()}\r\n          {renderDeleteCategoryModal()}\r\n    </Layout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}