{"ast":null,"code":"import axios from \"../helpers/axios\";\nimport { categoryConstants } from \"./constants\";\n\nconst getAllCategory = () => {\n  return async dispatch => {\n    dispatch({\n      type: categoryConstants.GET_ALL_CATEGORY_REQUEST\n    });\n    const res = await axios.get(\"/category/getcategory\");\n    console.log(res);\n\n    if (res.status === 200) {\n      const {\n        categoryList\n      } = res.data;\n      dispatch({\n        type: categoryConstants.GET_ALL_CATEGORY_SUCCESS,\n        payload: {\n          categories: categoryList\n        }\n      });\n    } else {\n      dispatch({\n        type: categoryConstants.GET_ALL_CATEGORY_FAILURE,\n        payload: {\n          error: res.data.error\n        }\n      });\n    }\n  };\n};\n\nexport const addCategory = form => {\n  return async dispatch => {\n    dispatch({\n      type: categoryConstants.ADD_NEW_CATEGORY_REQUEST\n    });\n\n    try {\n      const res = await axios.post(`/category/create`, form);\n\n      if (res.status === 201) {\n        dispatch({\n          type: categoryConstants.ADD_NEW_CATEGORY_SUCCESS,\n          payload: {\n            categ: res.data.category\n          } //This \"category\" is in Backend --> Controllers --> Caregory.js --> 47 line\n\n        });\n      } else {\n        dispatch({\n          type: categoryConstants.ADD_NEW_CATEGORY_FAILURE,\n          payload: res.data.error\n        });\n      }\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n};\nexport const updateCategories = form => {\n  return async dispatch => {\n    dispatch({\n      type: categoryConstants.UPDATE_CATEGORY_REQUEST\n    });\n    const res = await axios.post(`/category/update`, form);\n\n    if (res.status === 201) {\n      dispatch(getAllCategory()); //After the update refresh the page with new updated categories\n    } else {\n      dispatch({\n        type: categoryConstants.UPDATE_CATEGORY_FAILURE,\n        payload: {\n          error\n        }\n      });\n    }\n  };\n};\nexport const deleteCategories = ids => {\n  return async dispatch => {\n    const res = await axios.post(`/category/delete`, {\n      payload: {\n        ids\n      }\n    });\n\n    if (res.status == 200) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n};\nexport { getAllCategory };","map":{"version":3,"sources":["C:/Users/Praveen Kariyawasam/Documents/Projects/E-Commerce - Project/mern-ecommerce/admin-app/src/actions/category.action.js"],"names":["axios","categoryConstants","getAllCategory","dispatch","type","GET_ALL_CATEGORY_REQUEST","res","get","console","log","status","categoryList","data","GET_ALL_CATEGORY_SUCCESS","payload","categories","GET_ALL_CATEGORY_FAILURE","error","addCategory","form","ADD_NEW_CATEGORY_REQUEST","post","ADD_NEW_CATEGORY_SUCCESS","categ","category","ADD_NEW_CATEGORY_FAILURE","response","updateCategories","UPDATE_CATEGORY_REQUEST","UPDATE_CATEGORY_FAILURE","deleteCategories","ids"],"mappings":"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","sourcesContent":["import axios from \"../helpers/axios\";\r\nimport { categoryConstants } from \"./constants\";\r\n\r\nconst getAllCategory = () => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: categoryConstants.GET_ALL_CATEGORY_REQUEST });\r\n    const res = await axios.get(\"/category/getcategory\");\r\n    console.log(res);\r\n\r\n    if (res.status === 200) {\r\n      const { categoryList } = res.data;\r\n\r\n      dispatch({\r\n        type: categoryConstants.GET_ALL_CATEGORY_SUCCESS,\r\n        payload: { categories: categoryList },\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: categoryConstants.GET_ALL_CATEGORY_FAILURE,\r\n        payload: { error: res.data.error },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const addCategory = (form) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: categoryConstants.ADD_NEW_CATEGORY_REQUEST });\r\n    try {\r\n      const res = await axios.post(`/category/create`, form);\r\n      if (res.status === 201) {\r\n        dispatch({\r\n          type: categoryConstants.ADD_NEW_CATEGORY_SUCCESS,\r\n          payload: { categ: res.data.category }, //This \"category\" is in Backend --> Controllers --> Caregory.js --> 47 line\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: categoryConstants.ADD_NEW_CATEGORY_FAILURE,\r\n          payload: res.data.error,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response);\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateCategories = (form) => {\r\n  return async (dispatch) => {\r\n    dispatch({type: categoryConstants.UPDATE_CATEGORY_REQUEST});\r\n    const res = await axios.post(`/category/update`, form);\r\n    if (res.status === 201) {\r\n      dispatch(getAllCategory()) //After the update refresh the page with new updated categories\r\n    } else {\r\n    dispatch({\r\n      type: categoryConstants.UPDATE_CATEGORY_FAILURE,\r\n      payload: { error }\r\n    })\r\n    }\r\n  };\r\n};\r\n\r\nexport const deleteCategories = (ids) => {\r\n  return async (dispatch) => {\r\n    const res = await axios.post(`/category/delete`, {\r\n      payload: {\r\n        ids,\r\n      },\r\n    });\r\n    if (res.status == 200) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n};\r\n\r\nexport {\r\n  getAllCategory\r\n}"]},"metadata":{},"sourceType":"module"}