{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Praveen Kariyawasam\\\\Documents\\\\Projects\\\\E-Commerce - Project\\\\mern-ecommerce\\\\admin-app\\\\src\\\\containers\\\\Page\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Modal from '../../components/UI/Modal';\nimport Layout from '../../components/Layout';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport Input from '../../components/UI/Input';\nimport linearCategories from '../../helpers/linearCategories';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createPage } from '../../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Page() {\n  _s();\n\n  const [createModal, setCreateModal] = useState(false);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [banners, setBanners] = useState([]);\n  const [products, setProducts] = useState([]);\n  const category = useSelector(state => state.category);\n  const [categories, setCategories] = useState([]);\n  const [categoryId, setCategoryId] = useState('');\n  const [type, setType] = useState('');\n  const dispatch = useDispatch();\n  const page = useSelector(state => state.page);\n  useEffect(() => {\n    setCategories(linearCategories(category.categories)); // This will get all the select part categories with setCategories and put in to categories (you can see in the useState)\n  }, [category.categories]); //This effect done after save the page\n\n  useEffect(() => {\n    console.log(page);\n\n    if (!page.loading) {\n      setCreateModal(false);\n      setTitle('');\n      setCategoryId('');\n      setDescription('');\n      setProducts([]);\n      setBanners([]);\n    }\n  }, [page]);\n\n  const onCategoryChange = e => {\n    const category = categories.find(category => category._id === e.target.value); //This part will find the relevant category and after that with our select category list, find the realavant type of that category (helpers -> linearCategory -> type: category.type)\n\n    setCategoryId(e.target.value);\n    setType(category.type); // After that we set the type like this.\n  };\n\n  const handleBannerImages = e => {\n    console.log(e);\n    setBanners([...banners, e.target.files[0]]);\n  };\n\n  const handleProductImages = e => {\n    console.log(e);\n    setProducts([...products, e.target.files[0]]);\n  };\n\n  const submitPageForm = e => {\n    //e.target.preventDefault();\n    if (title === \"\") {\n      alert('Title is required');\n      setCreateModal(false);\n      return;\n    }\n\n    if (description === \"\") {\n      alert('Description is required');\n      setCreateModal(false);\n      return;\n    }\n\n    const form = new FormData();\n    form.append('title', title);\n    form.append('description', description);\n    form.append('category', categoryId);\n    form.append('type', type);\n    banners.forEach((banner, index) => {\n      form.append('banners', banner);\n    });\n    products.forEach((product, index) => {\n      form.append('products', product);\n    });\n    dispatch(createPage(form)); // setCreateModal(false);\n  };\n\n  const renderCreatePageModal = () => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: createModal,\n      modalTitle: 'Create New Page',\n      handleClose: () => setCreateModal(false),\n      onSubmit: submitPageForm,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"form-control form-control-sm\",\n              value: categoryId,\n              onChange: onCategoryChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"select category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 29\n              }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: cat._id,\n                children: cat.name\n              }, cat._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 33\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              value: title,\n              onChange: e => setTitle(e.target.value),\n              placeholder: 'Page Title',\n              className: \"form-control-sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              value: description,\n              onChange: e => setDescription(e.target.value),\n              placeholder: 'Page Description',\n              className: \"form-control-sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"banners\",\n              onChange: handleBannerImages,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }, this), banners.length > 0 ? banners.map((banner, index) => /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: banner.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this)) : null, /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              name: \"products\",\n              onChange: handleProductImages,\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }, this), products.length > 0 ? products.map((product, index) => /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this)) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    sidebar: true,\n    children: [renderCreatePageModal(), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCreateModal(true),\n      children: \"Craete Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Page, \"2HcG6CwVSyR3r3au/zx6zwoAayU=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["C:/Users/Praveen Kariyawasam/Documents/Projects/E-Commerce - Project/mern-ecommerce/admin-app/src/containers/Page/index.js"],"names":["React","useEffect","useState","Modal","Layout","Col","Container","Row","Input","linearCategories","useDispatch","useSelector","createPage","Page","createModal","setCreateModal","title","setTitle","description","setDescription","banners","setBanners","products","setProducts","category","state","categories","setCategories","categoryId","setCategoryId","type","setType","dispatch","page","console","log","loading","onCategoryChange","e","find","_id","target","value","handleBannerImages","files","handleProductImages","submitPageForm","alert","form","FormData","append","forEach","banner","index","product","renderCreatePageModal","map","cat","name","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Modal from '../../components/UI/Modal'\r\nimport Layout from '../../components/Layout'\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport Input from '../../components/UI/Input';\r\nimport linearCategories from '../../helpers/linearCategories';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createPage } from '../../actions';\r\n\r\n\r\nexport default function Page() {\r\n    const [createModal , setCreateModal] = useState(false);\r\n    const [title, setTitle] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [ banners, setBanners] = useState([]);\r\n    const [products, setProducts ] = useState([]);\r\n    const category = useSelector(state=> state.category);\r\n    const [ categories , setCategories] = useState([]);\r\n    const [ categoryId , setCategoryId] = useState('');\r\n    const [ type , setType] = useState('');\r\n    const dispatch = useDispatch();\r\n    const page = useSelector(state => state.page);\r\n\r\n\r\n    useEffect(() => {\r\n        setCategories(linearCategories(category.categories)); // This will get all the select part categories with setCategories and put in to categories (you can see in the useState)\r\n    },[category.categories]);\r\n\r\n    //This effect done after save the page\r\n    useEffect(() => {\r\n        console.log(page);\r\n        if(!page.loading){\r\n            setCreateModal(false);\r\n            setTitle('');\r\n            setCategoryId('');\r\n            setDescription('');\r\n            setProducts([]);\r\n            setBanners([]);\r\n        }\r\n    },[page]);\r\n\r\n\r\n    const onCategoryChange = (e) =>{\r\n        const category = categories.find(category => category._id === e.target.value); //This part will find the relevant category and after that with our select category list, find the realavant type of that category (helpers -> linearCategory -> type: category.type)\r\n        setCategoryId(e.target.value);\r\n        setType(category.type); // After that we set the type like this.\r\n    }\r\n\r\n    const handleBannerImages = (e) =>{\r\n       console.log(e);\r\n       setBanners([...banners, e.target.files[0]]);\r\n    }\r\n\r\n    const handleProductImages = (e) =>{\r\n        console.log(e);\r\n        setProducts([...products, e.target.files[0]]);\r\n     }\r\n\r\n     const submitPageForm = (e) => {\r\n        //e.target.preventDefault();\r\n\r\n        if(title === \"\"){\r\n            alert('Title is required');\r\n            setCreateModal(false);\r\n            return;\r\n        }\r\n\r\n        if(description === \"\"){\r\n            alert('Description is required');\r\n            setCreateModal(false);\r\n            return;\r\n        }\r\n        \r\n\r\n\r\n        const form = new FormData();\r\n        form.append('title', title);\r\n        form.append('description', description);\r\n        form.append('category', categoryId);\r\n        form.append('type',type);\r\n        banners.forEach((banner, index) =>{\r\n            form.append('banners', banner);\r\n        });\r\n        products.forEach((product, index) =>{\r\n            form.append('products', product);\r\n        });\r\n        dispatch(createPage(form));\r\n        // setCreateModal(false);\r\n     }\r\n\r\n    const renderCreatePageModal = () =>{\r\n        return(\r\n            <Modal\r\n            show = {createModal}\r\n            modalTitle = {'Create New Page'}\r\n            handleClose = {()=> setCreateModal(false)}\r\n            onSubmit = {submitPageForm}\r\n            >\r\n                <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <select\r\n                            className=\"form-control form-control-sm\"\r\n                            value={categoryId}\r\n                            onChange={onCategoryChange}\r\n                        >\r\n                            <option value=\"\">select category</option>\r\n                            {\r\n                               categories.map(cat => \r\n                                <option key={cat._id} value={cat._id}>{cat.name}</option>\r\n                                    )\r\n                            }\r\n\r\n                        </select>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Input\r\n                        value={title}\r\n                        onChange = {(e) => setTitle(e.target.value)}\r\n                        placeholder = {'Page Title'}\r\n                        className=\"form-control-sm\"\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Input\r\n                        value={description}\r\n                        onChange = {(e) => setDescription(e.target.value)}\r\n                        placeholder = {'Page Description'}\r\n                        className=\"form-control-sm\"\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col>\r\n                        <input \r\n                            type=\"file\"\r\n                            name=\"banners\"\r\n                            onChange={handleBannerImages}\r\n                            className=\"form-control\"\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                {\r\n                    banners.length > 0 ? banners.map((banner,index)=>\r\n                        <Row key={index}> \r\n                        <Col>{banner.name}</Col>\r\n                        </Row>\r\n                    ):null\r\n                }\r\n\r\n                <Row>\r\n                    <Col>\r\n                        <input \r\n                            type=\"file\"\r\n                            name=\"products\"\r\n                            onChange={handleProductImages}\r\n                            className=\"form-control\"\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                {\r\n                    products.length > 0 ? products.map((product,index)=>\r\n                        <Row key={index}> \r\n                        <Col>{product.name}</Col>\r\n                        </Row>\r\n                    ):null\r\n                }\r\n\r\n                </Container>\r\n            </Modal>\r\n        );\r\n    }\r\n    return (\r\n        <Layout sidebar>\r\n            {renderCreatePageModal()}\r\n            <button onClick={()=> setCreateModal(true)}>Craete Page</button>\r\n        </Layout>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}