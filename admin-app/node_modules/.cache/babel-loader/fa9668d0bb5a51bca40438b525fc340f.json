{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Praveen Kariyawasam\\\\Documents\\\\Projects\\\\E-Commerce - Project\\\\mern-ecommerce\\\\admin-app\\\\src\\\\containers\\\\Category\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Col, Container, Row, Button } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addCategory, getAllCategory, updateCategories, deleteCategories as deleteCategoriesAction } from \"../../actions\";\nimport Layout from \"../../components/Layout\";\nimport Modal from '../../components/UI/Modal';\nimport CheckboxTree from \"react-checkbox-tree\";\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\nimport { IoIosCheckboxOutline, IoIosCheckbox, IoIosArrowForward, IoIosArrowDown, IoIosAddCircleOutline, IoIosTrash, IoIosMedkit } from \"react-icons/io\";\nimport UpdateCategoriesModal from \"./components/UpdateCategoriesModal\";\nimport AddCategoryModal from \"./components/addCategoryModal\";\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Category() {\n  _s();\n\n  const category = useSelector(state => state.category);\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n  const [categoryName, setCategoryName] = useState('');\n  const [parentCategoryId, setParentCategoryId] = useState('');\n  const [categoryImage, setCategoryImage] = useState('');\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const [checkedArray, setCheckedArray] = useState([]);\n  const [expandedArray, setExpandedArray] = useState([]);\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\n  const [deleteCategoryModal, setDeleteCategoryModal] = useState(false); ////////////////////Now this code part in the App.js 24 line//////////\n  // useEffect(() => {\n  //   dispatch(getAllCategory()); \n  // }, []);\n\n  const handleClose = () => {\n    const form = new FormData();\n\n    if (title === \"\") {\n      alert('Title is required');\n      setCreateModal(false);\n      return;\n    }\n\n    form.append('name', categoryName);\n    form.append('parentId', parentCategoryId);\n    form.append('categoryImage', categoryImage);\n    dispatch(addCategory(form));\n    setCategoryName('');\n    setParentCategoryId('');\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const renderCategories = categories => {\n    let myCategories = [];\n\n    for (let category__ of categories) {\n      myCategories.push({\n        label: category__.name,\n        value: category__._id,\n        children: category__.children.length > 0 && renderCategories(category__.children)\n      });\n    }\n\n    return myCategories;\n  }; //This fuction for <select> <option></option> </select> part\n\n\n  const createCategoryList = function (categories) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name,\n        parentId: category.parentId,\n        type: category.type\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n\n    return options;\n  };\n\n  const handleCategoryImage = e => {\n    setCategoryImage(e.target.files[0]);\n  };\n\n  const updateCategory = () => {\n    updateCheckedAndExpandedCategories();\n    setUpdateCategoryModal(true);\n  };\n\n  const updateCheckedAndExpandedCategories = () => {\n    const categories = createCategoryList(category.categories);\n    const checkedArray = [];\n    const expandedArray = [];\n    checked.length > 0 && checked.forEach((categoryId, index) => {\n      const category = categories.find((category, _index) => categoryId == category.value);\n      category && checkedArray.push(category);\n    });\n    expanded.length > 0 && expanded.forEach((categoryId, index) => {\n      const category = categories.find((category, _index) => categoryId == category.value);\n      category && expandedArray.push(category);\n    });\n    setCheckedArray(checkedArray);\n    setExpandedArray(expandedArray);\n  };\n\n  const handleCategoryInput = (key, value, index, type) => {\n    if (type === \"checked\") {\n      const updatedCheckedArray = checkedArray.map((item, _index) => index == _index ? { ...item,\n        [key]: value\n      } : item);\n      setCheckedArray(updatedCheckedArray);\n    } else if (type === \"expanded\") {\n      const updatedExpandedArray = expandedArray.map((item, _index) => index == _index ? { ...item,\n        [key]: value\n      } : item);\n      setExpandedArray(updatedExpandedArray);\n    }\n  };\n\n  const updateCategoriesForm = () => {\n    const form = new FormData();\n    expandedArray.forEach((item, index) => (form.append('_id', item.value), form.append('name', item.name), form.append('parentId', item.parentId ? item.parentId : \"\"), form.append('type', item.type)));\n    checkedArray.forEach((item, index) => (form.append('_id', item.value), form.append('name', item.name), form.append('parentId', item.parentId ? item.parentId : \"\"), form.append('type', item.type)));\n    dispatch(updateCategories(form));\n    setUpdateCategoryModal(false);\n  };\n\n  const deleteCategory = () => {\n    updateCheckedAndExpandedCategories();\n    setDeleteCategoryModal(true);\n  };\n\n  const DeleteCategoriesYes = () => {\n    const checkedIdsArray = checkedArray.map((item, index) => ({\n      _id: item.value\n    }));\n    const expandedIdsArray = checkedArray.map((item, index) => ({\n      _id: item.value\n    }));\n    const idsArray = expandedIdsArray.concat(checkedIdsArray);\n\n    if (checkedIdsArray.length > 0) {\n      dispatch(deleteCategoriesAction(checkedIdsArray)).then(result => {\n        if (result) {\n          dispatch(getAllCategory());\n          setDeleteCategoryModal(false);\n        }\n      });\n    }\n\n    setDeleteCategoryModal(false);\n  };\n\n  const renderDeleteCategoryModal = () => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      modalTitle: \"Confirm\",\n      show: deleteCategoryModal,\n      handleClose: () => setDeleteCategoryModal(false),\n      buttons: [{\n        label: 'No',\n        color: 'primary',\n        onClick: () => {\n          alert('no');\n        }\n      }, {\n        label: 'Yes',\n        color: 'danger',\n        onClick: DeleteCategoriesYes\n      }],\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Expanded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), expandedArray.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 44\n      }, this)), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Checked\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), checkedArray.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 43\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    sidebar: true,\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttonContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleShow,\n                type: \"button\",\n                class: \"btn btn-primary\",\n                children: [/*#__PURE__*/_jsxDEV(IoIosAddCircleOutline, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 85\n                }, this), \" Add\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: deleteCategory,\n                type: \"button\",\n                class: \"btn btn-primary\",\n                children: [/*#__PURE__*/_jsxDEV(IoIosTrash, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 89\n                }, this), \"  Delete\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: updateCategory,\n                type: \"button\",\n                class: \"btn btn-primary\",\n                children: [/*#__PURE__*/_jsxDEV(IoIosMedkit, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 88\n                }, this), \" Edit\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(CheckboxTree, {\n            nodes: renderCategories(category.categories),\n            checked: checked,\n            expanded: expanded,\n            onCheck: checked => setChecked(checked),\n            onExpand: expanded => setExpanded(expanded),\n            icons: {\n              check: /*#__PURE__*/_jsxDEV(IoIosCheckbox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 26\n              }, this),\n              uncheck: /*#__PURE__*/_jsxDEV(IoIosCheckboxOutline, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 28\n              }, this),\n              halfCheck: /*#__PURE__*/_jsxDEV(IoIosCheckbox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 30\n              }, this),\n              expandClose: /*#__PURE__*/_jsxDEV(IoIosArrowForward, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 32\n              }, this),\n              expandOpen: /*#__PURE__*/_jsxDEV(IoIosArrowDown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 31\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddCategoryModal, {\n      show: show,\n      handleClose: () => setShow(false),\n      onSubmit: handleClose,\n      modalTitle: 'Add New Category',\n      categoryList: createCategoryList(category.categories),\n      categoryName: categoryName,\n      setCategoryName: setCategoryName,\n      parentCategoryId: parentCategoryId,\n      setParentCategoryId: setParentCategoryId,\n      handleCategoryImage: handleCategoryImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UpdateCategoriesModal, {\n      show: updateCategoryModal,\n      handleClose: updateCategoriesForm,\n      modalTitle: 'Update Categories',\n      size: \"lg\",\n      expandedArray: expandedArray,\n      checkedArray: checkedArray,\n      handleCategoryInput: handleCategoryInput,\n      categoryList: createCategoryList(category.categories)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), renderDeleteCategoryModal()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Category, \"m6Txul9kAbcvVs1VtDW+gJQYDoc=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["C:/Users/Praveen Kariyawasam/Documents/Projects/E-Commerce - Project/mern-ecommerce/admin-app/src/containers/Category/index.js"],"names":["React","useEffect","useState","Col","Container","Row","Button","useDispatch","useSelector","addCategory","getAllCategory","updateCategories","deleteCategories","deleteCategoriesAction","Layout","Modal","CheckboxTree","IoIosCheckboxOutline","IoIosCheckbox","IoIosArrowForward","IoIosArrowDown","IoIosAddCircleOutline","IoIosTrash","IoIosMedkit","UpdateCategoriesModal","AddCategoryModal","Category","category","state","dispatch","show","setShow","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","categoryImage","setCategoryImage","checked","setChecked","expanded","setExpanded","checkedArray","setCheckedArray","expandedArray","setExpandedArray","updateCategoryModal","setUpdateCategoryModal","deleteCategoryModal","setDeleteCategoryModal","handleClose","form","FormData","title","alert","setCreateModal","append","handleShow","renderCategories","categories","myCategories","category__","push","label","name","value","_id","children","length","createCategoryList","options","parentId","type","handleCategoryImage","e","target","files","updateCategory","updateCheckedAndExpandedCategories","forEach","categoryId","index","find","_index","handleCategoryInput","key","updatedCheckedArray","map","item","updatedExpandedArray","updateCategoriesForm","deleteCategory","DeleteCategoriesYes","checkedIdsArray","expandedIdsArray","idsArray","concat","then","result","renderDeleteCategoryModal","color","onClick","display","justifyContent","check","uncheck","halfCheck","expandClose","expandOpen"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,EAA8BC,MAA9B,QAA4C,iBAA5C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,gBAAtC,EAAwDC,gBAAgB,IAAIC,sBAA5E,QAA0G,eAA1G;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAO,iDAAP;AACA,SAASC,oBAAT,EAA+BC,aAA/B,EAA8CC,iBAA9C,EAAiEC,cAAjE,EAAiFC,qBAAjF,EAAwGC,UAAxG,EAAoHC,WAApH,QAAuI,gBAAvI;AACA,OAAOC,qBAAP,MAAkC,oCAAlC;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAO,aAAP;;AAGA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAMC,QAAQ,GAAGnB,WAAW,CAAEoB,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAA5B;AACA,QAAME,QAAQ,GAAGtB,WAAW,EAA5B;AACA,QAAM,CAACuB,IAAD,EAAOC,OAAP,IAAkB7B,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAAC8B,YAAD,EAAcC,eAAd,IAAgC/B,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACgC,gBAAD,EAAkBC,mBAAlB,IAAwCjC,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACkC,aAAD,EAAeC,gBAAf,IAAkCnC,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACoC,OAAD,EAAUC,UAAV,IAAwBrC,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACsC,QAAD,EAAWC,WAAX,IAA0BvC,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACwC,YAAD,EAAeC,eAAf,IAAkCzC,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC0C,aAAD,EAAgBC,gBAAhB,IAAoC3C,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAAC4C,mBAAD,EAAsBC,sBAAtB,IAAgD7C,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAM,CAAC8C,mBAAD,EAAsBC,sBAAtB,IAAgD/C,QAAQ,CAAC,KAAD,CAA9D,CAZiC,CAejC;AACA;AACA;AACA;;AAEA,QAAMgD,WAAW,GAAG,MAAM;AACxB,UAAMC,IAAI,GAAG,IAAIC,QAAJ,EAAb;;AAEA,QAAGC,KAAK,KAAK,EAAb,EAAgB;AACdC,MAAAA,KAAK,CAAC,mBAAD,CAAL;AACAC,MAAAA,cAAc,CAAC,KAAD,CAAd;AACA;AACH;;AAICJ,IAAAA,IAAI,CAACK,MAAL,CAAY,MAAZ,EAAmBxB,YAAnB;AACAmB,IAAAA,IAAI,CAACK,MAAL,CAAY,UAAZ,EAAuBtB,gBAAvB;AACAiB,IAAAA,IAAI,CAACK,MAAL,CAAY,eAAZ,EAA4BpB,aAA5B;AACAP,IAAAA,QAAQ,CAACpB,WAAW,CAAC0C,IAAD,CAAZ,CAAR;AACAlB,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,mBAAmB,CAAC,EAAD,CAAnB;AAEAJ,IAAAA,OAAO,CAAC,KAAD,CAAP;AAED,GApBD;;AAsBA,QAAM0B,UAAU,GAAG,MAAM1B,OAAO,CAAC,IAAD,CAAhC;;AAEA,QAAM2B,gBAAgB,GAAIC,UAAD,IAAgB;AACvC,QAAIC,YAAY,GAAG,EAAnB;;AACA,SAAK,IAAIC,UAAT,IAAuBF,UAAvB,EAAmC;AACjCC,MAAAA,YAAY,CAACE,IAAb,CACE;AACEC,QAAAA,KAAK,EAAEF,UAAU,CAACG,IADpB;AAEEC,QAAAA,KAAK,EAACJ,UAAU,CAACK,GAFnB;AAGEC,QAAAA,QAAQ,EAACN,UAAU,CAACM,QAAX,CAAoBC,MAApB,GAA6B,CAA7B,IAAkCV,gBAAgB,CAACG,UAAU,CAACM,QAAZ;AAH7D,OADF;AAOD;;AACD,WAAOP,YAAP;AACD,GAZD,CA5CiC,CA0DjC;;;AACA,QAAMS,kBAAkB,GAAG,UAACV,UAAD,EAA6B;AAAA,QAAhBW,OAAgB,uEAAP,EAAO;;AACpD,SAAI,IAAI3C,QAAR,IAAoBgC,UAApB,EAA+B;AAC3BW,MAAAA,OAAO,CAACR,IAAR,CAAa;AACXG,QAAAA,KAAK,EAAEtC,QAAQ,CAACuC,GADL;AAEXF,QAAAA,IAAI,EAAErC,QAAQ,CAACqC,IAFJ;AAGXO,QAAAA,QAAQ,EAAE5C,QAAQ,CAAC4C,QAHR;AAIXC,QAAAA,IAAI,EAAE7C,QAAQ,CAAC6C;AAJJ,OAAb;;AAMA,UAAG7C,QAAQ,CAACwC,QAAT,CAAkBC,MAAlB,GAA2B,CAA9B,EAAgC;AAC5BC,QAAAA,kBAAkB,CAAC1C,QAAQ,CAACwC,QAAV,EAAoBG,OAApB,CAAlB;AACH;AACJ;;AACD,WAAOA,OAAP;AACH,GAbD;;AAeA,QAAMG,mBAAmB,GAAIC,CAAD,IAAM;AAC9BrC,IAAAA,gBAAgB,CAACqC,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAD,CAAhB;AACH,GAFD;;AAIA,QAAMC,cAAc,GAAG,MAAM;AAC3BC,IAAAA,kCAAkC;AAClC/B,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AAED,GAJD;;AAMA,QAAM+B,kCAAkC,GAAG,MAAM;AAC/C,UAAMnB,UAAU,GAAGU,kBAAkB,CAAC1C,QAAQ,CAACgC,UAAV,CAArC;AACA,UAAMjB,YAAY,GAAG,EAArB;AACA,UAAME,aAAa,GAAG,EAAtB;AACAN,IAAAA,OAAO,CAAC8B,MAAR,GAAiB,CAAjB,IAAsB9B,OAAO,CAACyC,OAAR,CAAgB,CAACC,UAAD,EAAaC,KAAb,KAAuB;AAC3D,YAAMtD,QAAQ,GAAGgC,UAAU,CAACuB,IAAX,CAAgB,CAACvD,QAAD,EAAWwD,MAAX,KAAsBH,UAAU,IAAGrD,QAAQ,CAACsC,KAA5D,CAAjB;AACAtC,MAAAA,QAAQ,IAAIe,YAAY,CAACoB,IAAb,CAAkBnC,QAAlB,CAAZ;AACD,KAHqB,CAAtB;AAIAa,IAAAA,QAAQ,CAAC4B,MAAT,GAAkB,CAAlB,IAAuB5B,QAAQ,CAACuC,OAAT,CAAiB,CAACC,UAAD,EAAaC,KAAb,KAAuB;AAC7D,YAAMtD,QAAQ,GAAGgC,UAAU,CAACuB,IAAX,CAAgB,CAACvD,QAAD,EAAWwD,MAAX,KAAsBH,UAAU,IAAGrD,QAAQ,CAACsC,KAA5D,CAAjB;AACAtC,MAAAA,QAAQ,IAAIiB,aAAa,CAACkB,IAAd,CAAmBnC,QAAnB,CAAZ;AACD,KAHsB,CAAvB;AAIAgB,IAAAA,eAAe,CAACD,YAAD,CAAf;AACAG,IAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACD,GAdD;;AAgBA,QAAMwC,mBAAmB,GAAG,CAACC,GAAD,EAAMpB,KAAN,EAAagB,KAAb,EAAoBT,IAApB,KAA6B;AACvD,QAAGA,IAAI,KAAM,SAAb,EAAuB;AACrB,YAAMc,mBAAmB,GAAG5C,YAAY,CAAC6C,GAAb,CAAiB,CAACC,IAAD,EAAOL,MAAP,KAAkBF,KAAK,IAAIE,MAAT,GAAkB,EAAE,GAAGK,IAAL;AAAW,SAACH,GAAD,GAAOpB;AAAlB,OAAlB,GAA6CuB,IAAhF,CAA5B;AACA7C,MAAAA,eAAe,CAAC2C,mBAAD,CAAf;AACD,KAHD,MAGM,IAAGd,IAAI,KAAK,UAAZ,EAAwB;AAC5B,YAAMiB,oBAAoB,GAAG7C,aAAa,CAAC2C,GAAd,CAAkB,CAACC,IAAD,EAAOL,MAAP,KAAkBF,KAAK,IAAIE,MAAT,GAAkB,EAAE,GAAGK,IAAL;AAAW,SAACH,GAAD,GAAOpB;AAAlB,OAAlB,GAA6CuB,IAAjF,CAA7B;AACA3C,MAAAA,gBAAgB,CAAC4C,oBAAD,CAAhB;AACD;AACF,GARD;;AAUA,QAAMC,oBAAoB,GAAG,MAAM;AAEjC,UAAMvC,IAAI,GAAG,IAAIC,QAAJ,EAAb;AAEAR,IAAAA,aAAa,CAACmC,OAAd,CAAsB,CAACS,IAAD,EAAMP,KAAN,MACpB9B,IAAI,CAACK,MAAL,CAAY,KAAZ,EAAmBgC,IAAI,CAACvB,KAAxB,GACAd,IAAI,CAACK,MAAL,CAAY,MAAZ,EAAoBgC,IAAI,CAACxB,IAAzB,CADA,EAEAb,IAAI,CAACK,MAAL,CAAY,UAAZ,EAAwBgC,IAAI,CAACjB,QAAL,GAAgBiB,IAAI,CAACjB,QAArB,GAA+B,EAAvD,CAFA,EAGApB,IAAI,CAACK,MAAL,CAAY,MAAZ,EAAoBgC,IAAI,CAAChB,IAAzB,CAJoB,CAAtB;AAOA9B,IAAAA,YAAY,CAACqC,OAAb,CAAqB,CAACS,IAAD,EAAMP,KAAN,MACnB9B,IAAI,CAACK,MAAL,CAAY,KAAZ,EAAmBgC,IAAI,CAACvB,KAAxB,GACAd,IAAI,CAACK,MAAL,CAAY,MAAZ,EAAoBgC,IAAI,CAACxB,IAAzB,CADA,EAEAb,IAAI,CAACK,MAAL,CAAY,UAAZ,EAAwBgC,IAAI,CAACjB,QAAL,GAAgBiB,IAAI,CAACjB,QAArB,GAA+B,EAAvD,CAFA,EAGApB,IAAI,CAACK,MAAL,CAAY,MAAZ,EAAoBgC,IAAI,CAAChB,IAAzB,CAJmB,CAArB;AAOA3C,IAAAA,QAAQ,CAAClB,gBAAgB,CAACwC,IAAD,CAAjB,CAAR;AACAJ,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACD,GApBD;;AAsBA,QAAM4C,cAAc,GAAG,MAAK;AAC1Bb,IAAAA,kCAAkC;AAClC7B,IAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACD,GAHD;;AAKA,QAAM2C,mBAAmB,GAAG,MAAM;AAChC,UAAMC,eAAe,GAAGnD,YAAY,CAAC6C,GAAb,CAAiB,CAACC,IAAD,EAAOP,KAAP,MAAiB;AAACf,MAAAA,GAAG,EAAEsB,IAAI,CAACvB;AAAX,KAAjB,CAAjB,CAAxB;AACA,UAAM6B,gBAAgB,GAAGpD,YAAY,CAAC6C,GAAb,CAAiB,CAACC,IAAD,EAAOP,KAAP,MAAiB;AAACf,MAAAA,GAAG,EAAEsB,IAAI,CAACvB;AAAX,KAAjB,CAAjB,CAAzB;AACA,UAAM8B,QAAQ,GAAGD,gBAAgB,CAACE,MAAjB,CAAwBH,eAAxB,CAAjB;;AAEA,QAAGA,eAAe,CAACzB,MAAhB,GAAyB,CAA5B,EAA8B;AAC5BvC,MAAAA,QAAQ,CAAChB,sBAAsB,CAACgF,eAAD,CAAvB,CAAR,CACCI,IADD,CACMC,MAAM,IAAI;AACd,YAAGA,MAAH,EAAU;AACRrE,UAAAA,QAAQ,CAACnB,cAAc,EAAf,CAAR;AACAuC,UAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACD;AACF,OAND;AAOD;;AAEDA,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AAED,GAjBD;;AAmBA,QAAMkD,yBAAyB,GAAG,MAAM;AACtC,wBACE,QAAC,KAAD;AACE,MAAA,UAAU,EAAC,SADb;AAEE,MAAA,IAAI,EAAInD,mBAFV;AAGE,MAAA,WAAW,EAAI,MAAKC,sBAAsB,CAAC,KAAD,CAH5C;AAIE,MAAA,OAAO,EAAI,CACT;AACEc,QAAAA,KAAK,EAAE,IADT;AAEEqC,QAAAA,KAAK,EAAE,SAFT;AAGEC,QAAAA,OAAO,EAAE,MAAM;AACb/C,UAAAA,KAAK,CAAC,IAAD,CAAL;AACD;AALH,OADS,EAQT;AACES,QAAAA,KAAK,EAAE,KADT;AAEEqC,QAAAA,KAAK,EAAE,QAFT;AAGEC,QAAAA,OAAO,EAAET;AAHX,OARS,CAJb;AAAA,8BAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBF,EAqBGhD,aAAa,CAAC2C,GAAd,CAAkB,CAACC,IAAD,EAAMP,KAAN,kBAAgB;AAAA,kBAAmBO,IAAI,CAACxB;AAAxB,SAAWiB,KAAX;AAAA;AAAA;AAAA;AAAA,cAAlC,CArBH,eAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF,EAuBGvC,YAAY,CAAC6C,GAAb,CAAiB,CAACC,IAAD,EAAMP,KAAN,kBAAgB;AAAA,kBAAmBO,IAAI,CAACxB;AAAxB,SAAWiB,KAAX;AAAA;AAAA;AAAA;AAAA,cAAjC,CAvBH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA2BD,GA5BD;;AA8BA,sBACE,QAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAA,4BACE,QAAC,SAAD;AAAA,8BACE,QAAC,GAAD;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAA,iCACE;AAAK,YAAA,KAAK,EAAE;AAAEqB,cAAAA,OAAO,EAAE,MAAX;AAAmBC,cAAAA,cAAc,EAAE;AAAnC,aAAZ;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAG,iBAAjB;AAAA,sCACE;AAAQ,gBAAA,OAAO,EAAE9C,UAAjB;AAA6B,gBAAA,IAAI,EAAC,QAAlC;AAA4C,gBAAA,KAAK,EAAC,iBAAlD;AAAA,wCAAoE,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA,wBAApE;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAQ,gBAAA,OAAO,EAAEkC,cAAjB;AAAkC,gBAAA,IAAI,EAAC,QAAvC;AAAgD,gBAAA,KAAK,EAAC,iBAAtD;AAAA,wCAAwE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,wBAAxE;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAQ,gBAAA,OAAO,EAAEd,cAAjB;AAAiC,gBAAA,IAAI,EAAC,QAAtC;AAA+C,gBAAA,KAAK,EAAC,iBAArD;AAAA,wCAAuE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,wBAAvE;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAaE,QAAC,GAAD;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAA,iCACG,QAAC,YAAD;AACG,YAAA,KAAK,EAAEnB,gBAAgB,CAAC/B,QAAQ,CAACgC,UAAV,CAD1B;AAEG,YAAA,OAAO,EAAErB,OAFZ;AAGG,YAAA,QAAQ,EAAEE,QAHb;AAIG,YAAA,OAAO,EAAEF,OAAO,IAAIC,UAAU,CAAED,OAAF,CAJjC;AAKG,YAAA,QAAQ,EAAEE,QAAQ,IAAIC,WAAW,CAACD,QAAD,CALpC;AAMG,YAAA,KAAK,EAAG;AACNgE,cAAAA,KAAK,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,sBADD;AAENC,cAAAA,OAAO,eAAE,QAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,sBAFH;AAGNC,cAAAA,SAAS,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,sBAHL;AAINC,cAAAA,WAAW,eAAE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,sBAJP;AAKNC,cAAAA,UAAU,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AALN;AANX;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAbF,eA+BE,QAAC,GAAD;AAAA,+BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAuCE,QAAC,gBAAD;AACE,MAAA,IAAI,EAAE9E,IADR;AAEE,MAAA,WAAW,EAAG,MAAKC,OAAO,CAAC,KAAD,CAF5B;AAGE,MAAA,QAAQ,EAAEmB,WAHZ;AAIE,MAAA,UAAU,EAAI,kBAJhB;AAKE,MAAA,YAAY,EAAImB,kBAAkB,CAAC1C,QAAQ,CAACgC,UAAV,CALpC;AAME,MAAA,YAAY,EAAI3B,YANlB;AAOE,MAAA,eAAe,EAAIC,eAPrB;AAQE,MAAA,gBAAgB,EAAIC,gBARtB;AASE,MAAA,mBAAmB,EAAIC,mBATzB;AAUE,MAAA,mBAAmB,EAAIsC;AAVzB;AAAA;AAAA;AAAA;AAAA,YAvCF,eAmDE,QAAC,qBAAD;AACG,MAAA,IAAI,EAAE3B,mBADT;AAEG,MAAA,WAAW,EAAG4C,oBAFjB;AAGG,MAAA,UAAU,EAAI,mBAHjB;AAIG,MAAA,IAAI,EAAG,IAJV;AAKG,MAAA,aAAa,EAAI9C,aALpB;AAMG,MAAA,YAAY,EAAIF,YANnB;AAOG,MAAA,mBAAmB,EAAI0C,mBAP1B;AAQG,MAAA,YAAY,EAAIf,kBAAkB,CAAC1C,QAAQ,CAACgC,UAAV;AARrC;AAAA;AAAA;AAAA;AAAA,YAnDF,EA6DGwC,yBAAyB,EA7D5B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiED;;GA3PuBzE,Q;UACLlB,W,EACAD,W;;;KAFKmB,Q","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Col, Container, Row, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addCategory, getAllCategory, updateCategories, deleteCategories as deleteCategoriesAction } from \"../../actions\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Modal from '../../components/UI/Modal';\r\nimport CheckboxTree from \"react-checkbox-tree\";\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\nimport { IoIosCheckboxOutline, IoIosCheckbox, IoIosArrowForward, IoIosArrowDown, IoIosAddCircleOutline, IoIosTrash, IoIosMedkit } from \"react-icons/io\";\r\nimport UpdateCategoriesModal from \"./components/UpdateCategoriesModal\";\r\nimport AddCategoryModal from \"./components/addCategoryModal\";\r\nimport './style.css';\r\n\r\n\r\nexport default function Category() {\r\n  const category = useSelector((state) => state.category);\r\n  const dispatch = useDispatch();\r\n  const [show, setShow] = useState(false);\r\n  const [categoryName,setCategoryName] =useState('');\r\n  const [parentCategoryId,setParentCategoryId] =useState('');\r\n  const [categoryImage,setCategoryImage] =useState('');\r\n  const [checked, setChecked] = useState([]);\r\n  const [expanded, setExpanded] = useState([]);\r\n  const [checkedArray, setCheckedArray] = useState([]);\r\n  const [expandedArray, setExpandedArray] = useState([]);\r\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\r\n  const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\r\n\r\n\r\n  ////////////////////Now this code part in the App.js 24 line//////////\r\n  // useEffect(() => {\r\n  //   dispatch(getAllCategory()); \r\n  // }, []);\r\n\r\n  const handleClose = () => {\r\n    const form = new FormData();\r\n\r\n    if(title === \"\"){\r\n      alert('Title is required');\r\n      setCreateModal(false);\r\n      return;\r\n  }\r\n\r\n  \r\n\r\n    form.append('name',categoryName);\r\n    form.append('parentId',parentCategoryId);\r\n    form.append('categoryImage',categoryImage);\r\n    dispatch(addCategory(form)); \r\n    setCategoryName('');\r\n    setParentCategoryId('');\r\n  \r\n    setShow(false);\r\n    \r\n  } \r\n  \r\n  const handleShow = () => setShow(true);\r\n\r\n  const renderCategories = (categories) => {\r\n    let myCategories = [];\r\n    for (let category__ of categories) {\r\n      myCategories.push(\r\n        {\r\n          label: category__.name,\r\n          value:category__._id,\r\n          children:category__.children.length > 0 && renderCategories(category__.children)\r\n        }\r\n      );\r\n    }\r\n    return myCategories;\r\n  };\r\n\r\n  //This fuction for <select> <option></option> </select> part\r\n  const createCategoryList = (categories, options =[]) => {\r\n      for(let category of categories){\r\n          options.push({ \r\n            value: category._id, \r\n            name: category.name , \r\n            parentId: category.parentId , \r\n            type: category.type\r\n          });\r\n          if(category.children.length > 0){\r\n              createCategoryList(category.children, options)\r\n          }\r\n      }\r\n      return options;\r\n  }\r\n\r\n  const handleCategoryImage = (e) =>{\r\n      setCategoryImage(e.target.files[0]);\r\n  }\r\n\r\n  const updateCategory = () => {\r\n    updateCheckedAndExpandedCategories();\r\n    setUpdateCategoryModal(true);\r\n    \r\n  }\r\n\r\n  const updateCheckedAndExpandedCategories = () => {\r\n    const categories = createCategoryList(category.categories);\r\n    const checkedArray = [];\r\n    const expandedArray = [];\r\n    checked.length > 0 && checked.forEach((categoryId, index) => {\r\n      const category = categories.find((category, _index) => categoryId== category.value);\r\n      category && checkedArray.push(category)\r\n    })\r\n    expanded.length > 0 && expanded.forEach((categoryId, index) => {\r\n      const category = categories.find((category, _index) => categoryId== category.value);\r\n      category && expandedArray.push(category)\r\n    })\r\n    setCheckedArray(checkedArray);\r\n    setExpandedArray(expandedArray);\r\n  }\r\n\r\n  const handleCategoryInput = (key, value, index, type) => {\r\n    if(type ===  \"checked\"){\r\n      const updatedCheckedArray = checkedArray.map((item, _index) => index == _index ? { ...item, [key]: value} : item);\r\n      setCheckedArray(updatedCheckedArray);\r\n    }else if(type === \"expanded\" ){\r\n      const updatedExpandedArray = expandedArray.map((item, _index) => index == _index ? { ...item, [key]: value} : item);\r\n      setExpandedArray(updatedExpandedArray);\r\n    }\r\n  }\r\n  \r\n  const updateCategoriesForm = () => {\r\n\r\n    const form = new FormData();\r\n\r\n    expandedArray.forEach((item,index) => (\r\n      form.append('_id', item.value),\r\n      form.append('name', item.name),\r\n      form.append('parentId', item.parentId ? item.parentId: \"\"),\r\n      form.append('type', item.type)\r\n    ))\r\n\r\n    checkedArray.forEach((item,index) => (\r\n      form.append('_id', item.value),\r\n      form.append('name', item.name),\r\n      form.append('parentId', item.parentId ? item.parentId: \"\"),\r\n      form.append('type', item.type)\r\n    ))\r\n\r\n    dispatch(updateCategories(form));\r\n    setUpdateCategoryModal(false);\r\n  }\r\n\r\n  const deleteCategory = () =>{\r\n    updateCheckedAndExpandedCategories();\r\n    setDeleteCategoryModal(true);\r\n  }\r\n\r\n  const DeleteCategoriesYes = () => {\r\n    const checkedIdsArray = checkedArray.map((item, index)=> ({_id: item.value}));\r\n    const expandedIdsArray = checkedArray.map((item, index)=> ({_id: item.value}));\r\n    const idsArray = expandedIdsArray.concat(checkedIdsArray);\r\n    \r\n    if(checkedIdsArray.length > 0){\r\n      dispatch(deleteCategoriesAction(checkedIdsArray))\r\n      .then(result => {\r\n        if(result){\r\n          dispatch(getAllCategory())\r\n          setDeleteCategoryModal(false)\r\n        }\r\n      })\r\n    }\r\n    \r\n    setDeleteCategoryModal(false);\r\n\r\n  }\r\n\r\n  const renderDeleteCategoryModal = () => {\r\n    return(\r\n      <Modal\r\n        modalTitle=\"Confirm\"\r\n        show = {deleteCategoryModal}\r\n        handleClose = {()=> setDeleteCategoryModal(false)}\r\n        buttons = {[\r\n          {\r\n            label: 'No',\r\n            color: 'primary',\r\n            onClick: () => {\r\n              alert('no');\r\n            }\r\n          },\r\n          {\r\n            label: 'Yes',\r\n            color: 'danger',\r\n            onClick: DeleteCategoriesYes\r\n          }\r\n        ]}\r\n        >\r\n  \r\n        <h5>Expanded</h5>\r\n        {expandedArray.map((item,index) => <span key={index}>{item.name}</span>)}\r\n        <h5>Checked</h5>\r\n        {checkedArray.map((item,index) => <span key={index}>{item.name}</span>)}\r\n      </Modal>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <h3>Category</h3>\r\n              <div className = \"buttonContainer\">\r\n                <button onClick={handleShow} type=\"button\"  class=\"btn btn-primary\"><IoIosAddCircleOutline/> Add</button>\r\n                <button onClick={deleteCategory}  type=\"button\" class=\"btn btn-primary\"><IoIosTrash/>  Delete</button>\r\n                <button onClick={updateCategory} type=\"button\" class=\"btn btn-primary\"><IoIosMedkit/> Edit</button>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={12}>\r\n             <CheckboxTree\r\n                nodes={renderCategories(category.categories)}\r\n                checked={checked}\r\n                expanded={expanded}\r\n                onCheck={checked => setChecked( checked )}\r\n                onExpand={expanded => setExpanded(expanded)}\r\n                icons ={{\r\n                  check: <IoIosCheckbox/>,\r\n                  uncheck: <IoIosCheckboxOutline/>,\r\n                  halfCheck: <IoIosCheckbox/>,\r\n                  expandClose: <IoIosArrowForward/>,\r\n                  expandOpen: <IoIosArrowDown/>,\r\n                }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n          \r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      <AddCategoryModal \r\n        show={show}\r\n        handleClose ={()=> setShow(false)}\r\n        onSubmit={handleClose}\r\n        modalTitle = {'Add New Category'}\r\n        categoryList = {createCategoryList(category.categories)}\r\n        categoryName = {categoryName}\r\n        setCategoryName = {setCategoryName}\r\n        parentCategoryId = {parentCategoryId}\r\n        setParentCategoryId = {setParentCategoryId}\r\n        handleCategoryImage = {handleCategoryImage}\r\n      />\r\n      <UpdateCategoriesModal \r\n         show={updateCategoryModal}\r\n         handleClose ={updateCategoriesForm}\r\n         modalTitle = {'Update Categories'}\r\n         size = \"lg\"\r\n         expandedArray = {expandedArray}\r\n         checkedArray = {checkedArray}\r\n         handleCategoryInput = {handleCategoryInput}\r\n         categoryList = {createCategoryList(category.categories)}\r\n      />\r\n      {renderDeleteCategoryModal()}\r\n    </Layout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}