{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Praveen Kariyawasam\\\\Documents\\\\Projects\\\\E-Commerce - Project\\\\mern-ecommerce\\\\admin-app\\\\src\\\\containers\\\\Category\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addCategory, getAllCategory, updateCategories, deleteCategories as deleteCategoriesAction } from \"../../actions\";\nimport Layout from \"../../components/Layout\";\nimport Modal from '../../components/UI/Modal';\nimport Input from \"../../components/UI/Input\";\nimport CheckboxTree from \"react-checkbox-tree\";\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\nimport { IoIosCheckboxOutline, IoIosCheckbox, IoIosArrowForward, IoIosArrowDown, IoIosAddCircleOutline, IoIosTrash, IoIosMedkit } from \"react-icons/io\";\nimport UpdateCategoriesModal from \"./components/UpdateCategoriesModal\";\nimport AddCategoryModal from \"./components/addCategoryModal\";\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Category() {\n  _s();\n\n  const category = useSelector(state => state.category);\n  const dispatch = useDispatch();\n  const [show, setShow] = useState(false);\n  const [categoryName, setCategoryName] = useState('');\n  const [parentCategoryId, setParentCategoryId] = useState('');\n  const [categoryImage, setCategoryImage] = useState('');\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const [checkedArray, setCheckedArray] = useState([]);\n  const [expandedArray, setExpandedArray] = useState([]);\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\n  const [deleteCategoryModal, setDeleteCategoryModal] = useState(false); ////////////////////Now this code part in the App.js 24 line//////////\n  // useEffect(() => {\n  //   dispatch(getAllCategory()); \n  // }, []);\n\n  useEffect(() => {\n    if (!category.loading) {\n      setShow(false);\n    }\n  }, [category.loading]);\n\n  const handleClose = () => {\n    const form = new FormData();\n\n    if (categoryName === \"\") {\n      alert('Name is required');\n      return;\n    }\n\n    form.append('name', categoryName);\n    form.append('parentId', parentCategoryId);\n    form.append('categoryImage', categoryImage);\n    dispatch(addCategory(form));\n    setCategoryName('');\n    setParentCategoryId('');\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const renderCategories = categories => {\n    let myCategories = [];\n\n    for (let category__ of categories) {\n      myCategories.push({\n        label: category__.name,\n        value: category__._id,\n        children: category__.children.length > 0 && renderCategories(category__.children)\n      });\n    }\n\n    return myCategories;\n  }; //This fuction for <select> <option></option> </select> part\n\n\n  const createCategoryList = function (categories) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name,\n        parentId: category.parentId,\n        type: category.type\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n\n    return options;\n  };\n\n  const handleCategoryImage = e => {\n    setCategoryImage(e.target.files[0]);\n  };\n\n  const updateCategory = () => {\n    updateCheckedAndExpandedCategories();\n    setUpdateCategoryModal(true);\n  };\n\n  const updateCheckedAndExpandedCategories = () => {\n    const categories = createCategoryList(category.categories);\n    const checkedArray = [];\n    const expandedArray = [];\n    checked.length > 0 && checked.forEach((categoryId, index) => {\n      const category = categories.find((category, _index) => categoryId === category.value);\n      category && checkedArray.push(category);\n    });\n    expanded.length > 0 && expanded.forEach((categoryId, index) => {\n      const category = categories.find((category, _index) => categoryId === category.value);\n      category && expandedArray.push(category);\n    });\n    setCheckedArray(checkedArray);\n    setExpandedArray(expandedArray);\n  };\n\n  const handleCategoryInput = (key, value, index, type) => {\n    if (type === \"checked\") {\n      const updatedCheckedArray = checkedArray.map((item, _index) => index === _index ? { ...item,\n        [key]: value\n      } : item);\n      setCheckedArray(updatedCheckedArray);\n    } else if (type === \"expanded\") {\n      const updatedExpandedArray = expandedArray.map((item, _index) => index === _index ? { ...item,\n        [key]: value\n      } : item);\n      setExpandedArray(updatedExpandedArray);\n    }\n  };\n\n  const updateCategoriesForm = () => {\n    const form = new FormData();\n    expandedArray.forEach((item, index) => (form.append('_id', item.value), form.append('name', item.name), form.append('parentId', item.parentId ? item.parentId : \"\"), form.append('type', item.type)));\n    checkedArray.forEach((item, index) => (form.append('_id', item.value), form.append('name', item.name), form.append('parentId', item.parentId ? item.parentId : \"\"), form.append('type', item.type)));\n    dispatch(updateCategories(form));\n  };\n\n  const deleteCategory = () => {\n    updateCheckedAndExpandedCategories();\n    setDeleteCategoryModal(true);\n  };\n\n  const DeleteCategoriesYes = () => {\n    const checkedIdsArray = checkedArray.map((item, index) => ({\n      _id: item.value\n    }));\n    const expandedIdsArray = checkedArray.map((item, index) => ({\n      _id: item.value\n    }));\n    const idsArray = expandedIdsArray.concat(checkedIdsArray);\n\n    if (checkedIdsArray.length > 0) {\n      dispatch(deleteCategoriesAction(checkedIdsArray)).then(result => {\n        if (result) {\n          dispatch(getAllCategory());\n          setDeleteCategoryModal(false);\n        }\n      });\n    }\n\n    setDeleteCategoryModal(false);\n  };\n\n  const UpdateCategoriesModal = props => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: updateCategoryModal,\n      handleClose: () => setUpdateCategoryModal(false),\n      onSubmit: updateCategoriesForm,\n      modalTitle: 'Update Categories',\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Expanded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 10\n      }, this), expandedArray.length > 0 && expandedArray.map((item, index) => /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: item.name,\n            placeholder: `Category Name`,\n            onChange: e => handleCategoryInput('name', e.target.value, index, 'expanded')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            className: \"form-control\",\n            value: item.parentId,\n            onChange: e => handleCategoryInput('parentId', e.target.value, index, 'expanded'),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"select category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 18\n            }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.name\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 26\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: item.type,\n            onChange: e => handleCategoryInput('type', e.target.value, index, 'expanded'),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"store\",\n              children: \"Store\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"product\",\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"page\",\n              children: \"Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 14\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 12\n      }, this)), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Check Categories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 10\n      }, this), checkedArray.length > 0 && checkedArray.map((item, index) => /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            value: item.name,\n            placeholder: `Category Name`,\n            onChange: e => handleCategoryInput('name', e.target.value, index, 'checked')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            className: \"form-control\",\n            value: item.parentId,\n            onChange: e => handleCategoryInput('parentId', e.target.value, index, 'checked'),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"select category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 18\n            }, this), createCategoryList(category.categories).map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option.value,\n              children: option.name\n            }, option.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 26\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            value: item.type,\n            onChange: e => handleCategoryInput('type', e.target.value, index, 'checked'),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"store\",\n              children: \"Store\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"product\",\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"page\",\n              children: \"Page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 14\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 12\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 8\n    }, this);\n  };\n\n  const renderDeleteCategoryModal = () => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      modalTitle: \"Confirm\",\n      show: deleteCategoryModal,\n      handleClose: () => setDeleteCategoryModal(false),\n      buttons: [{\n        label: 'No',\n        color: 'primary',\n        onClick: () => {\n          alert('no');\n        }\n      }, {\n        label: 'Yes',\n        color: 'danger',\n        onClick: DeleteCategoriesYes\n      }],\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Expanded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), expandedArray.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 44\n      }, this)), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Checked\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), checkedArray.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 43\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    sidebar: true,\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"buttonContainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleShow,\n                type: \"button\",\n                class: \"btn btn-primary\",\n                children: [/*#__PURE__*/_jsxDEV(IoIosAddCircleOutline, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 85\n                }, this), \" Add\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: deleteCategory,\n                type: \"button\",\n                class: \"btn btn-primary\",\n                children: [/*#__PURE__*/_jsxDEV(IoIosTrash, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 89\n                }, this), \"  Delete\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: updateCategory,\n                type: \"button\",\n                class: \"btn btn-primary\",\n                children: [/*#__PURE__*/_jsxDEV(IoIosMedkit, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 88\n                }, this), \" Edit\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(CheckboxTree, {\n            nodes: renderCategories(category.categories),\n            checked: checked,\n            expanded: expanded,\n            onCheck: checked => setChecked(checked),\n            onExpand: expanded => setExpanded(expanded),\n            icons: {\n              check: /*#__PURE__*/_jsxDEV(IoIosCheckbox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 26\n              }, this),\n              uncheck: /*#__PURE__*/_jsxDEV(IoIosCheckboxOutline, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 28\n              }, this),\n              halfCheck: /*#__PURE__*/_jsxDEV(IoIosCheckbox, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 30\n              }, this),\n              expandClose: /*#__PURE__*/_jsxDEV(IoIosArrowForward, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 32\n              }, this),\n              expandOpen: /*#__PURE__*/_jsxDEV(IoIosArrowDown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 31\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddCategoryModal, {\n      show: show,\n      handleClose: () => setShow(false),\n      onSubmit: handleClose,\n      modalTitle: 'Add New Category',\n      categoryList: createCategoryList(category.categories),\n      categoryName: categoryName,\n      setCategoryName: setCategoryName,\n      parentCategoryId: parentCategoryId,\n      setParentCategoryId: setParentCategoryId,\n      handleCategoryImage: handleCategoryImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 7\n    }, this), UpdateCategoriesModal, renderDeleteCategoryModal()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 311,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Category, \"bBfNeOEHPQR6disygQuXZoMe8U8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["C:/Users/Praveen Kariyawasam/Documents/Projects/E-Commerce - Project/mern-ecommerce/admin-app/src/containers/Category/index.js"],"names":["React","useEffect","useState","Col","Container","Row","useDispatch","useSelector","addCategory","getAllCategory","updateCategories","deleteCategories","deleteCategoriesAction","Layout","Modal","Input","CheckboxTree","IoIosCheckboxOutline","IoIosCheckbox","IoIosArrowForward","IoIosArrowDown","IoIosAddCircleOutline","IoIosTrash","IoIosMedkit","UpdateCategoriesModal","AddCategoryModal","Category","category","state","dispatch","show","setShow","categoryName","setCategoryName","parentCategoryId","setParentCategoryId","categoryImage","setCategoryImage","checked","setChecked","expanded","setExpanded","checkedArray","setCheckedArray","expandedArray","setExpandedArray","updateCategoryModal","setUpdateCategoryModal","deleteCategoryModal","setDeleteCategoryModal","loading","handleClose","form","FormData","alert","append","handleShow","renderCategories","categories","myCategories","category__","push","label","name","value","_id","children","length","createCategoryList","options","parentId","type","handleCategoryImage","e","target","files","updateCategory","updateCheckedAndExpandedCategories","forEach","categoryId","index","find","_index","handleCategoryInput","key","updatedCheckedArray","map","item","updatedExpandedArray","updateCategoriesForm","deleteCategory","DeleteCategoriesYes","checkedIdsArray","expandedIdsArray","idsArray","concat","then","result","props","option","renderDeleteCategoryModal","color","onClick","display","justifyContent","check","uncheck","halfCheck","expandClose","expandOpen"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addCategory, getAllCategory, updateCategories, deleteCategories as deleteCategoriesAction } from \"../../actions\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Modal from '../../components/UI/Modal';\r\nimport Input from \"../../components/UI/Input\";\r\nimport CheckboxTree from \"react-checkbox-tree\";\r\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\r\nimport { IoIosCheckboxOutline, IoIosCheckbox, IoIosArrowForward, IoIosArrowDown, IoIosAddCircleOutline, IoIosTrash, IoIosMedkit } from \"react-icons/io\";\r\nimport UpdateCategoriesModal from \"./components/UpdateCategoriesModal\";\r\nimport AddCategoryModal from \"./components/addCategoryModal\";\r\nimport './style.css';\r\n\r\n\r\nexport default function Category() {\r\n  const category = useSelector((state) => state.category);\r\n  const dispatch = useDispatch();\r\n  const [show, setShow] = useState(false);\r\n  const [categoryName,setCategoryName] =useState('');\r\n  const [parentCategoryId,setParentCategoryId] =useState('');\r\n  const [categoryImage,setCategoryImage] =useState('');\r\n  const [checked, setChecked] = useState([]);\r\n  const [expanded, setExpanded] = useState([]);\r\n  const [checkedArray, setCheckedArray] = useState([]);\r\n  const [expandedArray, setExpandedArray] = useState([]);\r\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\r\n  const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\r\n\r\n\r\n  ////////////////////Now this code part in the App.js 24 line//////////\r\n  // useEffect(() => {\r\n  //   dispatch(getAllCategory()); \r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n\r\n    if(!category.loading){\r\n      setShow(false);\r\n    }\r\n\r\n  },[category.loading])\r\n\r\n  const handleClose = () => {\r\n    const form = new FormData();\r\n    \r\n  \r\n    if(categoryName === \"\"){\r\n      alert('Name is required');\r\n      return;\r\n    }\r\n\r\n    form.append('name',categoryName);\r\n    form.append('parentId',parentCategoryId);\r\n    form.append('categoryImage',categoryImage);\r\n    dispatch(addCategory(form)); \r\n    setCategoryName('');\r\n    setParentCategoryId('');\r\n  \r\n    setShow(false);\r\n    \r\n  } \r\n  \r\n  const handleShow = () => setShow(true);\r\n\r\n  const renderCategories = (categories) => {\r\n    let myCategories = [];\r\n    for (let category__ of categories) {\r\n      myCategories.push(\r\n        {\r\n          label: category__.name,\r\n          value:category__._id,\r\n          children:category__.children.length > 0 && renderCategories(category__.children)\r\n        }\r\n      );\r\n    }\r\n    return myCategories;\r\n  };\r\n\r\n  //This fuction for <select> <option></option> </select> part\r\n  const createCategoryList = (categories, options =[]) => {\r\n      for(let category of categories){\r\n          options.push({ \r\n            value: category._id, \r\n            name: category.name , \r\n            parentId: category.parentId , \r\n            type: category.type\r\n          });\r\n          if(category.children.length > 0){\r\n              createCategoryList(category.children, options)\r\n          }\r\n      }\r\n      return options;\r\n  }\r\n\r\n  const handleCategoryImage = (e) =>{\r\n      setCategoryImage(e.target.files[0]);\r\n  }\r\n\r\n  const updateCategory = () => {\r\n    updateCheckedAndExpandedCategories();\r\n    setUpdateCategoryModal(true);\r\n    \r\n  }\r\n\r\n  const updateCheckedAndExpandedCategories = () => {\r\n    const categories = createCategoryList(category.categories);\r\n    const checkedArray = [];\r\n    const expandedArray = [];\r\n    checked.length > 0 && checked.forEach((categoryId, index) => {\r\n      const category = categories.find((category, _index) => categoryId=== category.value);\r\n      category && checkedArray.push(category)\r\n    })\r\n    expanded.length > 0 && expanded.forEach((categoryId, index) => {\r\n      const category = categories.find((category, _index) => categoryId=== category.value);\r\n      category && expandedArray.push(category)\r\n    })\r\n    setCheckedArray(checkedArray);\r\n    setExpandedArray(expandedArray);\r\n  }\r\n\r\n  const handleCategoryInput = (key, value, index, type) => {\r\n    if(type ===  \"checked\"){\r\n      const updatedCheckedArray = checkedArray.map((item, _index) => index === _index ? { ...item, [key]: value} : item);\r\n      setCheckedArray(updatedCheckedArray);\r\n    }else if(type === \"expanded\" ){\r\n      const updatedExpandedArray = expandedArray.map((item, _index) => index === _index ? { ...item, [key]: value} : item);\r\n      setExpandedArray(updatedExpandedArray);\r\n    }\r\n  }\r\n  \r\n  const updateCategoriesForm = () => {\r\n\r\n    const form = new FormData();\r\n\r\n    expandedArray.forEach((item,index) => (\r\n      form.append('_id', item.value),\r\n      form.append('name', item.name),\r\n      form.append('parentId', item.parentId ? item.parentId: \"\"),\r\n      form.append('type', item.type)\r\n    ))\r\n\r\n    checkedArray.forEach((item,index) => (\r\n      form.append('_id', item.value),\r\n      form.append('name', item.name),\r\n      form.append('parentId', item.parentId ? item.parentId: \"\"),\r\n      form.append('type', item.type)\r\n    ))\r\n\r\n    dispatch(updateCategories(form));\r\n  }\r\n\r\n  const deleteCategory = () =>{\r\n    updateCheckedAndExpandedCategories();\r\n    setDeleteCategoryModal(true);\r\n  }\r\n\r\n  const DeleteCategoriesYes = () => {\r\n    const checkedIdsArray = checkedArray.map((item, index)=> ({_id: item.value}));\r\n    const expandedIdsArray = checkedArray.map((item, index)=> ({_id: item.value}));\r\n    const idsArray = expandedIdsArray.concat(checkedIdsArray);\r\n    \r\n    if(checkedIdsArray.length > 0){\r\n      dispatch(deleteCategoriesAction(checkedIdsArray))\r\n      .then(result => {\r\n        if(result){\r\n          dispatch(getAllCategory())\r\n          setDeleteCategoryModal(false)\r\n        }\r\n      })\r\n    }\r\n    \r\n    setDeleteCategoryModal(false);\r\n\r\n  }\r\n\r\n  const UpdateCategoriesModal = (props) => {\r\n\r\n    return (\r\n       <Modal\r\n       show={updateCategoryModal}\r\n       handleClose ={()=>setUpdateCategoryModal(false)}\r\n       onSubmit ={updateCategoriesForm}\r\n       modalTitle = {'Update Categories'}\r\n       size = \"lg\"\r\n       >  \r\n         <Row>\r\n           <Col>\r\n                 <h6>Expanded</h6>\r\n           </Col>\r\n         </Row>\r\n         {\r\n           expandedArray.length > 0 &&\r\n           expandedArray.map((item, index) => \r\n           \r\n           <Row key={index}>\r\n             <Col>\r\n             <Input \r\n                 value={item.name}\r\n                 placeholder = {`Category Name`}\r\n                 onChange={(e)=> handleCategoryInput('name',e.target.value,index,'expanded') }\r\n             />\r\n             </Col> \r\n             <Col>\r\n             <select \r\n             className=\"form-control\" className=\"form-control\" \r\n             value ={item.parentId}\r\n             onChange={(e)=> handleCategoryInput('parentId',e.target.value,index,'expanded')}>\r\n                 <option>select category</option>\r\n                 {\r\n                     createCategoryList(category.categories).map(option =>\r\n                         <option key={option.value} value={option.value}>{option.name}</option>)\r\n                 }\r\n             </select>\r\n             </Col>  \r\n             <Col>\r\n                 <select className=\"form-control\" \r\n                  value={item.type}\r\n                  onChange ={(e)=> handleCategoryInput('type',e.target.value,index,'expanded')}\r\n                 >\r\n                   <option value=\"\">Select Type</option>\r\n                   <option value=\"store\">Store</option>\r\n                   <option value=\"product\">Product</option>\r\n                   <option value=\"page\">Page</option>\r\n                 </select>\r\n             </Col> \r\n         </Row>\r\n           )\r\n         }\r\n         <h6>Check Categories</h6>\r\n         {\r\n           checkedArray.length > 0 &&\r\n           checkedArray.map((item, index) => \r\n           \r\n           <Row key={index}>\r\n             <Col>\r\n             <Input \r\n                 value={item.name}\r\n                 placeholder = {`Category Name`}\r\n                 onChange={(e)=> handleCategoryInput('name',e.target.value,index,'checked') }\r\n             />\r\n             </Col> \r\n             <Col>\r\n             <select \r\n             className=\"form-control\" className=\"form-control\" \r\n             value ={item.parentId}\r\n             onChange={(e)=> handleCategoryInput('parentId',e.target.value,index,'checked')}>\r\n                 <option>select category</option>\r\n                 {\r\n                     createCategoryList(category.categories).map(option =>\r\n                         <option key={option.value} value={option.value}>{option.name}</option>)\r\n                 }\r\n             </select>\r\n             </Col>  \r\n             <Col>\r\n                 <select className=\"form-control\" \r\n                  value={item.type}\r\n                  onChange ={(e)=> handleCategoryInput('type',e.target.value,index,'checked')}\r\n                 >\r\n                   <option value=\"\">Select Type</option>\r\n                   <option value=\"store\">Store</option>\r\n                   <option value=\"product\">Product</option>\r\n                   <option value=\"page\">Page</option>\r\n                 </select>\r\n             </Col> \r\n         </Row>\r\n           )\r\n         }\r\n             <br></br>\r\n             {/* <input\r\n                 type=\"file\"\r\n                 name=\"categoryImage\"\r\n                 onChange ={handleCategoryImage}\r\n             /> */}\r\n \r\n       </Modal>\r\n    );\r\n  };\r\n\r\n  const renderDeleteCategoryModal = () => {\r\n    return(\r\n      <Modal\r\n        modalTitle=\"Confirm\"\r\n        show = {deleteCategoryModal}\r\n        handleClose = {()=> setDeleteCategoryModal(false)}\r\n        buttons = {[\r\n          {\r\n            label: 'No',\r\n            color: 'primary',\r\n            onClick: () => {\r\n              alert('no');\r\n            }\r\n          },\r\n          {\r\n            label: 'Yes',\r\n            color: 'danger',\r\n            onClick: DeleteCategoriesYes\r\n          }\r\n        ]}\r\n        >\r\n  \r\n        <h5>Expanded</h5>\r\n        {expandedArray.map((item,index) => <span key={index}>{item.name}</span>)}\r\n        <h5>Checked</h5>\r\n        {checkedArray.map((item,index) => <span key={index}>{item.name}</span>)}\r\n      </Modal>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <h3>Category</h3>\r\n              <div className = \"buttonContainer\">\r\n                <button onClick={handleShow} type=\"button\"  class=\"btn btn-primary\"><IoIosAddCircleOutline/> Add</button>\r\n                <button onClick={deleteCategory}  type=\"button\" class=\"btn btn-primary\"><IoIosTrash/>  Delete</button>\r\n                <button onClick={updateCategory} type=\"button\" class=\"btn btn-primary\"><IoIosMedkit/> Edit</button>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={12}>\r\n             <CheckboxTree\r\n                nodes={renderCategories(category.categories)}\r\n                checked={checked}\r\n                expanded={expanded}\r\n                onCheck={checked => setChecked( checked )}\r\n                onExpand={expanded => setExpanded(expanded)}\r\n                icons ={{\r\n                  check: <IoIosCheckbox/>,\r\n                  uncheck: <IoIosCheckboxOutline/>,\r\n                  halfCheck: <IoIosCheckbox/>,\r\n                  expandClose: <IoIosArrowForward/>,\r\n                  expandOpen: <IoIosArrowDown/>,\r\n                }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n          \r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n\r\n      <AddCategoryModal \r\n        show={show}\r\n        handleClose ={()=> setShow(false)}\r\n        onSubmit={handleClose}\r\n        modalTitle = {'Add New Category'}\r\n        categoryList = {createCategoryList(category.categories)}\r\n        categoryName = {categoryName}\r\n        setCategoryName = {setCategoryName}\r\n        parentCategoryId = {parentCategoryId}\r\n        setParentCategoryId = {setParentCategoryId}\r\n        handleCategoryImage = {handleCategoryImage}\r\n      />\r\n      {/* <UpdateCategoriesModal \r\n         show={updateCategoryModal}\r\n         handleClose ={()=>setUpdateCategoryModal(false)}\r\n         onSubmit={updateCategoriesForm}\r\n         modalTitle = {'Update Categories'}\r\n         size = \"lg\"\r\n         expandedArray = {expandedArray}\r\n         checkedArray = {checkedArray}\r\n         handleCategoryInput = {handleCategoryInput}\r\n         categoryList = {createCategoryList(category.categories)}\r\n      /> */}\r\n      {UpdateCategoriesModal}\r\n      {renderDeleteCategoryModal()}\r\n    </Layout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}