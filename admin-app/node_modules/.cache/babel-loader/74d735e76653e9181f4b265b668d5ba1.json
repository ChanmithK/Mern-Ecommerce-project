{"ast":null,"code":"import { categoryConstants } from \"../actions/constants\";\nconst initState = {\n  categories: [],\n  loading: false,\n  error: null\n}; //This function refresh the page with newly added category.\n// This function call in 72 th line in this file\n\nconst buildNewCategories = (parentId, categories, category) => {\n  let myCategories = [];\n\n  if (parentId === undefined) {\n    return [...categories, {\n      _id: category._id,\n      name: category.name,\n      slug: category.slug,\n      type: category.type,\n      children: []\n    }];\n  }\n\n  for (let cat of categories) {\n    if (cat._id === parentId) {\n      const newCategory = {\n        _id: category._id,\n        name: category.name,\n        slug: category.slug,\n        type: category.type,\n        parentId: category.parentId,\n        children: []\n      };\n      myCategories.push({ ...cat,\n        children: cat.children.length > 0 ? [...cat.children, newCategory] : [newCategory]\n      });\n    } else {\n      myCategories.push({ ...cat,\n        children: cat.children ? buildNewCategories(parentId, cat.children, category) : []\n      });\n    }\n  }\n\n  return myCategories;\n};\n\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case categoryConstants.GET_ALL_CATEGORY_SUCCESS:\n      state = { ...state,\n        categories: action.payload.categories\n      };\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\n      state = { ...state,\n        loading: true\n      };\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\n      const cate_ = action.payload.categ;\n      const updatedCategories = buildNewCategories(cate_.parentId, state.categories, cate_);\n      state = { ...state,\n        categories: updatedCategories,\n        loading: false\n      };\n      break;\n\n    case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\n      state = { ...initState,\n        loading: false\n      };\n      break;\n\n    case categoryConstants.UPDATE_CATEGORY_REQUEST:\n      state = { ...state,\n        loading: true\n      };\n      break;\n\n    case categoryConstants.UPDATE_CATEGORY_SUCCESS:\n      state = { ...state,\n        loading: false\n      };\n      break;\n\n    case categoryConstants.UPDATE_CATEGORY_FAILURE:\n      state = { ...state,\n        error: action.payload.error,\n        loading: false\n      };\n      break;\n\n    case categoryConstants.DELETE_CATEGORY_REQUEST:\n      state = { ...state,\n        loading: true\n      };\n      break;\n\n    case categoryConstants.DELETE_CATEGORY_SUCCESS:\n      state = { ...state,\n        loading: false\n      };\n      break;\n\n    case categoryConstants.DELETE_CATEGORY_FAILURE:\n      state = { ...state,\n        error: action.payload.error,\n        loading: false\n      };\n      break;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["C:/Users/Praveen Kariyawasam/Documents/Projects/E-Commerce - Project/mern-ecommerce/admin-app/src/reducers/category.reducer.js"],"names":["categoryConstants","initState","categories","loading","error","buildNewCategories","parentId","category","myCategories","undefined","_id","name","slug","type","children","cat","newCategory","push","length","state","action","GET_ALL_CATEGORY_SUCCESS","payload","ADD_NEW_CATEGORY_REQUEST","ADD_NEW_CATEGORY_SUCCESS","cate_","categ","updatedCategories","ADD_NEW_CATEGORY_FAILURE","UPDATE_CATEGORY_REQUEST","UPDATE_CATEGORY_SUCCESS","UPDATE_CATEGORY_FAILURE","DELETE_CATEGORY_REQUEST","DELETE_CATEGORY_SUCCESS","DELETE_CATEGORY_FAILURE"],"mappings":"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","sourcesContent":["import { categoryConstants } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n  categories: [],\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\n//This function refresh the page with newly added category.\r\n// This function call in 72 th line in this file\r\nconst buildNewCategories =(parentId,categories, category) => {\r\n\r\n  let myCategories = [];\r\n\r\n  if(parentId === undefined){\r\n    return [\r\n      ...categories,\r\n      {\r\n        _id: category._id,\r\n        name: category.name,\r\n        slug: category.slug,\r\n        type: category.type,\r\n        children: []\r\n\r\n      }\r\n    ];\r\n  }\r\n\r\n  for(let cat of categories){\r\n\r\n    if(cat._id === parentId){\r\n      const newCategory = {\r\n        _id: category._id,\r\n        name: category.name,\r\n        slug: category.slug,\r\n        type: category.type,\r\n        parentId: category.parentId,\r\n        children: []\r\n      };\r\n\r\n      myCategories.push({\r\n        ...cat,\r\n        children: cat.children.length > 0 ? [...cat.children, newCategory] : [newCategory]\r\n      });\r\n      }else{\r\n      myCategories.push({\r\n        ...cat,\r\n        children: cat.children ? buildNewCategories(parentId,cat.children,category) : []\r\n      });\r\n    }\r\n  }\r\n  return myCategories;\r\n}\r\n\r\nexport default  (state = initState, action) => {\r\n  switch (action.type) {\r\n    case categoryConstants.GET_ALL_CATEGORY_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        categories: action.payload.categories,\r\n      };\r\n      break;\r\n\r\n    case categoryConstants.ADD_NEW_CATEGORY_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading:true\r\n      };\r\n      break;\r\n\r\n    case categoryConstants.ADD_NEW_CATEGORY_SUCCESS:\r\n\r\n      const cate_ =action.payload.categ;\r\n      const updatedCategories = buildNewCategories(cate_.parentId,state.categories,cate_);\r\n\r\n      state = {\r\n        ...state,\r\n        categories: updatedCategories ,\r\n        loading:false\r\n      };\r\n      break;\r\n\r\n    case categoryConstants.ADD_NEW_CATEGORY_FAILURE:\r\n      state = {\r\n        ...initState,\r\n        loading:false\r\n      };\r\n      break;\r\n\r\n    case categoryConstants.UPDATE_CATEGORY_REQUEST:\r\n      state = {\r\n        ...state,\r\n        loading: true\r\n      }\r\n      break;\r\n    \r\n    case categoryConstants.UPDATE_CATEGORY_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        loading: false\r\n      }\r\n      break;\r\n    \r\n    case categoryConstants.UPDATE_CATEGORY_FAILURE:\r\n      state = {\r\n        ...state,\r\n        error: action.payload.error,\r\n        loading: false\r\n      }\r\n      break;\r\n\r\n      case categoryConstants.DELETE_CATEGORY_REQUEST:\r\n        state = {\r\n          ...state,\r\n          loading: true\r\n        }\r\n        break;\r\n      \r\n      case categoryConstants.DELETE_CATEGORY_SUCCESS:\r\n        state = {\r\n          ...state,\r\n          loading: false\r\n        }\r\n        break;\r\n      \r\n      case categoryConstants.DELETE_CATEGORY_FAILURE:\r\n        state = {\r\n          ...state,\r\n          error: action.payload.error,\r\n          loading: false\r\n        }\r\n        break;\r\n  }\r\n  return state;\r\n};\r\n "]},"metadata":{},"sourceType":"module"}